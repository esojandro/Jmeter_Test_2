/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 17665.0, "series": [{"data": [[0.0, 3.0], [0.1, 219.0], [0.2, 221.0], [0.3, 222.0], [0.4, 224.0], [0.5, 225.0], [0.6, 225.0], [0.7, 226.0], [0.8, 226.0], [0.9, 227.0], [1.0, 228.0], [1.1, 228.0], [1.2, 229.0], [1.3, 229.0], [1.4, 230.0], [1.5, 230.0], [1.6, 230.0], [1.7, 230.0], [1.8, 231.0], [1.9, 231.0], [2.0, 231.0], [2.1, 231.0], [2.2, 232.0], [2.3, 232.0], [2.4, 232.0], [2.5, 233.0], [2.6, 233.0], [2.7, 233.0], [2.8, 233.0], [2.9, 233.0], [3.0, 233.0], [3.1, 234.0], [3.2, 234.0], [3.3, 234.0], [3.4, 234.0], [3.5, 234.0], [3.6, 234.0], [3.7, 235.0], [3.8, 235.0], [3.9, 235.0], [4.0, 235.0], [4.1, 235.0], [4.2, 236.0], [4.3, 236.0], [4.4, 236.0], [4.5, 236.0], [4.6, 236.0], [4.7, 236.0], [4.8, 237.0], [4.9, 237.0], [5.0, 237.0], [5.1, 237.0], [5.2, 237.0], [5.3, 237.0], [5.4, 238.0], [5.5, 238.0], [5.6, 238.0], [5.7, 238.0], [5.8, 238.0], [5.9, 238.0], [6.0, 239.0], [6.1, 239.0], [6.2, 239.0], [6.3, 239.0], [6.4, 239.0], [6.5, 239.0], [6.6, 240.0], [6.7, 240.0], [6.8, 240.0], [6.9, 240.0], [7.0, 240.0], [7.1, 240.0], [7.2, 240.0], [7.3, 240.0], [7.4, 241.0], [7.5, 241.0], [7.6, 241.0], [7.7, 241.0], [7.8, 241.0], [7.9, 241.0], [8.0, 241.0], [8.1, 242.0], [8.2, 242.0], [8.3, 242.0], [8.4, 242.0], [8.5, 242.0], [8.6, 242.0], [8.7, 242.0], [8.8, 243.0], [8.9, 243.0], [9.0, 243.0], [9.1, 243.0], [9.2, 243.0], [9.3, 243.0], [9.4, 244.0], [9.5, 244.0], [9.6, 244.0], [9.7, 244.0], [9.8, 244.0], [9.9, 244.0], [10.0, 244.0], [10.1, 244.0], [10.2, 244.0], [10.3, 245.0], [10.4, 245.0], [10.5, 245.0], [10.6, 245.0], [10.7, 245.0], [10.8, 245.0], [10.9, 245.0], [11.0, 245.0], [11.1, 246.0], [11.2, 246.0], [11.3, 246.0], [11.4, 246.0], [11.5, 246.0], [11.6, 246.0], [11.7, 246.0], [11.8, 246.0], [11.9, 247.0], [12.0, 247.0], [12.1, 247.0], [12.2, 247.0], [12.3, 247.0], [12.4, 247.0], [12.5, 247.0], [12.6, 247.0], [12.7, 247.0], [12.8, 247.0], [12.9, 248.0], [13.0, 248.0], [13.1, 248.0], [13.2, 248.0], [13.3, 248.0], [13.4, 248.0], [13.5, 249.0], [13.6, 249.0], [13.7, 249.0], [13.8, 249.0], [13.9, 249.0], [14.0, 249.0], [14.1, 249.0], [14.2, 249.0], [14.3, 250.0], [14.4, 250.0], [14.5, 250.0], [14.6, 250.0], [14.7, 250.0], [14.8, 250.0], [14.9, 250.0], [15.0, 250.0], [15.1, 251.0], [15.2, 251.0], [15.3, 251.0], [15.4, 251.0], [15.5, 251.0], [15.6, 251.0], [15.7, 252.0], [15.8, 252.0], [15.9, 252.0], [16.0, 252.0], [16.1, 252.0], [16.2, 252.0], [16.3, 253.0], [16.4, 253.0], [16.5, 253.0], [16.6, 253.0], [16.7, 253.0], [16.8, 253.0], [16.9, 253.0], [17.0, 254.0], [17.1, 254.0], [17.2, 254.0], [17.3, 254.0], [17.4, 254.0], [17.5, 254.0], [17.6, 254.0], [17.7, 254.0], [17.8, 255.0], [17.9, 255.0], [18.0, 255.0], [18.1, 255.0], [18.2, 255.0], [18.3, 255.0], [18.4, 255.0], [18.5, 255.0], [18.6, 255.0], [18.7, 255.0], [18.8, 256.0], [18.9, 256.0], [19.0, 256.0], [19.1, 256.0], [19.2, 256.0], [19.3, 257.0], [19.4, 257.0], [19.5, 257.0], [19.6, 257.0], [19.7, 257.0], [19.8, 257.0], [19.9, 257.0], [20.0, 258.0], [20.1, 258.0], [20.2, 258.0], [20.3, 258.0], [20.4, 258.0], [20.5, 258.0], [20.6, 259.0], [20.7, 259.0], [20.8, 259.0], [20.9, 259.0], [21.0, 259.0], [21.1, 259.0], [21.2, 259.0], [21.3, 260.0], [21.4, 260.0], [21.5, 260.0], [21.6, 260.0], [21.7, 260.0], [21.8, 261.0], [21.9, 261.0], [22.0, 261.0], [22.1, 261.0], [22.2, 261.0], [22.3, 262.0], [22.4, 262.0], [22.5, 262.0], [22.6, 262.0], [22.7, 262.0], [22.8, 262.0], [22.9, 263.0], [23.0, 263.0], [23.1, 263.0], [23.2, 264.0], [23.3, 264.0], [23.4, 264.0], [23.5, 264.0], [23.6, 264.0], [23.7, 264.0], [23.8, 265.0], [23.9, 265.0], [24.0, 265.0], [24.1, 265.0], [24.2, 265.0], [24.3, 265.0], [24.4, 265.0], [24.5, 266.0], [24.6, 266.0], [24.7, 266.0], [24.8, 266.0], [24.9, 266.0], [25.0, 267.0], [25.1, 267.0], [25.2, 267.0], [25.3, 267.0], [25.4, 267.0], [25.5, 268.0], [25.6, 268.0], [25.7, 268.0], [25.8, 268.0], [25.9, 269.0], [26.0, 269.0], [26.1, 269.0], [26.2, 269.0], [26.3, 269.0], [26.4, 270.0], [26.5, 270.0], [26.6, 270.0], [26.7, 270.0], [26.8, 270.0], [26.9, 271.0], [27.0, 271.0], [27.1, 271.0], [27.2, 271.0], [27.3, 272.0], [27.4, 272.0], [27.5, 272.0], [27.6, 272.0], [27.7, 273.0], [27.8, 273.0], [27.9, 273.0], [28.0, 273.0], [28.1, 273.0], [28.2, 274.0], [28.3, 274.0], [28.4, 274.0], [28.5, 274.0], [28.6, 274.0], [28.7, 275.0], [28.8, 275.0], [28.9, 275.0], [29.0, 275.0], [29.1, 275.0], [29.2, 275.0], [29.3, 276.0], [29.4, 276.0], [29.5, 276.0], [29.6, 276.0], [29.7, 276.0], [29.8, 277.0], [29.9, 277.0], [30.0, 277.0], [30.1, 277.0], [30.2, 277.0], [30.3, 278.0], [30.4, 278.0], [30.5, 278.0], [30.6, 278.0], [30.7, 279.0], [30.8, 279.0], [30.9, 279.0], [31.0, 279.0], [31.1, 279.0], [31.2, 280.0], [31.3, 280.0], [31.4, 280.0], [31.5, 281.0], [31.6, 281.0], [31.7, 281.0], [31.8, 281.0], [31.9, 281.0], [32.0, 282.0], [32.1, 282.0], [32.2, 282.0], [32.3, 283.0], [32.4, 283.0], [32.5, 283.0], [32.6, 283.0], [32.7, 283.0], [32.8, 283.0], [32.9, 284.0], [33.0, 284.0], [33.1, 284.0], [33.2, 285.0], [33.3, 285.0], [33.4, 285.0], [33.5, 285.0], [33.6, 286.0], [33.7, 286.0], [33.8, 286.0], [33.9, 286.0], [34.0, 286.0], [34.1, 287.0], [34.2, 287.0], [34.3, 287.0], [34.4, 287.0], [34.5, 288.0], [34.6, 288.0], [34.7, 288.0], [34.8, 288.0], [34.9, 288.0], [35.0, 289.0], [35.1, 289.0], [35.2, 289.0], [35.3, 289.0], [35.4, 290.0], [35.5, 290.0], [35.6, 290.0], [35.7, 290.0], [35.8, 291.0], [35.9, 291.0], [36.0, 291.0], [36.1, 292.0], [36.2, 292.0], [36.3, 292.0], [36.4, 292.0], [36.5, 293.0], [36.6, 293.0], [36.7, 293.0], [36.8, 294.0], [36.9, 294.0], [37.0, 294.0], [37.1, 294.0], [37.2, 294.0], [37.3, 295.0], [37.4, 295.0], [37.5, 296.0], [37.6, 296.0], [37.7, 296.0], [37.8, 296.0], [37.9, 297.0], [38.0, 297.0], [38.1, 297.0], [38.2, 297.0], [38.3, 298.0], [38.4, 298.0], [38.5, 298.0], [38.6, 298.0], [38.7, 299.0], [38.8, 299.0], [38.9, 299.0], [39.0, 300.0], [39.1, 300.0], [39.2, 300.0], [39.3, 300.0], [39.4, 301.0], [39.5, 301.0], [39.6, 301.0], [39.7, 302.0], [39.8, 302.0], [39.9, 302.0], [40.0, 303.0], [40.1, 303.0], [40.2, 303.0], [40.3, 304.0], [40.4, 304.0], [40.5, 305.0], [40.6, 305.0], [40.7, 305.0], [40.8, 306.0], [40.9, 306.0], [41.0, 306.0], [41.1, 306.0], [41.2, 307.0], [41.3, 307.0], [41.4, 307.0], [41.5, 308.0], [41.6, 308.0], [41.7, 308.0], [41.8, 308.0], [41.9, 309.0], [42.0, 309.0], [42.1, 309.0], [42.2, 310.0], [42.3, 310.0], [42.4, 310.0], [42.5, 311.0], [42.6, 311.0], [42.7, 311.0], [42.8, 312.0], [42.9, 312.0], [43.0, 312.0], [43.1, 313.0], [43.2, 313.0], [43.3, 313.0], [43.4, 314.0], [43.5, 314.0], [43.6, 314.0], [43.7, 315.0], [43.8, 315.0], [43.9, 315.0], [44.0, 316.0], [44.1, 316.0], [44.2, 316.0], [44.3, 317.0], [44.4, 317.0], [44.5, 317.0], [44.6, 318.0], [44.7, 318.0], [44.8, 318.0], [44.9, 319.0], [45.0, 319.0], [45.1, 319.0], [45.2, 319.0], [45.3, 320.0], [45.4, 320.0], [45.5, 320.0], [45.6, 321.0], [45.7, 321.0], [45.8, 322.0], [45.9, 322.0], [46.0, 322.0], [46.1, 323.0], [46.2, 323.0], [46.3, 324.0], [46.4, 324.0], [46.5, 324.0], [46.6, 325.0], [46.7, 325.0], [46.8, 326.0], [46.9, 326.0], [47.0, 326.0], [47.1, 327.0], [47.2, 327.0], [47.3, 327.0], [47.4, 328.0], [47.5, 328.0], [47.6, 328.0], [47.7, 328.0], [47.8, 329.0], [47.9, 329.0], [48.0, 330.0], [48.1, 330.0], [48.2, 330.0], [48.3, 331.0], [48.4, 332.0], [48.5, 332.0], [48.6, 332.0], [48.7, 332.0], [48.8, 333.0], [48.9, 333.0], [49.0, 334.0], [49.1, 334.0], [49.2, 334.0], [49.3, 334.0], [49.4, 335.0], [49.5, 335.0], [49.6, 336.0], [49.7, 336.0], [49.8, 337.0], [49.9, 337.0], [50.0, 337.0], [50.1, 338.0], [50.2, 338.0], [50.3, 338.0], [50.4, 339.0], [50.5, 339.0], [50.6, 340.0], [50.7, 340.0], [50.8, 340.0], [50.9, 341.0], [51.0, 341.0], [51.1, 341.0], [51.2, 342.0], [51.3, 342.0], [51.4, 343.0], [51.5, 343.0], [51.6, 343.0], [51.7, 344.0], [51.8, 344.0], [51.9, 345.0], [52.0, 345.0], [52.1, 345.0], [52.2, 345.0], [52.3, 346.0], [52.4, 346.0], [52.5, 346.0], [52.6, 347.0], [52.7, 347.0], [52.8, 347.0], [52.9, 348.0], [53.0, 348.0], [53.1, 349.0], [53.2, 349.0], [53.3, 350.0], [53.4, 350.0], [53.5, 350.0], [53.6, 351.0], [53.7, 351.0], [53.8, 352.0], [53.9, 352.0], [54.0, 353.0], [54.1, 353.0], [54.2, 353.0], [54.3, 354.0], [54.4, 354.0], [54.5, 355.0], [54.6, 355.0], [54.7, 356.0], [54.8, 356.0], [54.9, 357.0], [55.0, 357.0], [55.1, 357.0], [55.2, 358.0], [55.3, 358.0], [55.4, 358.0], [55.5, 359.0], [55.6, 360.0], [55.7, 360.0], [55.8, 361.0], [55.9, 361.0], [56.0, 362.0], [56.1, 362.0], [56.2, 362.0], [56.3, 363.0], [56.4, 363.0], [56.5, 364.0], [56.6, 364.0], [56.7, 365.0], [56.8, 365.0], [56.9, 365.0], [57.0, 366.0], [57.1, 366.0], [57.2, 366.0], [57.3, 367.0], [57.4, 367.0], [57.5, 367.0], [57.6, 368.0], [57.7, 368.0], [57.8, 369.0], [57.9, 369.0], [58.0, 370.0], [58.1, 370.0], [58.2, 370.0], [58.3, 371.0], [58.4, 371.0], [58.5, 372.0], [58.6, 372.0], [58.7, 373.0], [58.8, 373.0], [58.9, 373.0], [59.0, 374.0], [59.1, 374.0], [59.2, 375.0], [59.3, 375.0], [59.4, 376.0], [59.5, 376.0], [59.6, 377.0], [59.7, 377.0], [59.8, 378.0], [59.9, 378.0], [60.0, 379.0], [60.1, 379.0], [60.2, 380.0], [60.3, 380.0], [60.4, 380.0], [60.5, 381.0], [60.6, 381.0], [60.7, 381.0], [60.8, 382.0], [60.9, 382.0], [61.0, 382.0], [61.1, 383.0], [61.2, 383.0], [61.3, 384.0], [61.4, 384.0], [61.5, 385.0], [61.6, 385.0], [61.7, 386.0], [61.8, 386.0], [61.9, 386.0], [62.0, 387.0], [62.1, 387.0], [62.2, 388.0], [62.3, 388.0], [62.4, 388.0], [62.5, 389.0], [62.6, 389.0], [62.7, 390.0], [62.8, 390.0], [62.9, 391.0], [63.0, 392.0], [63.1, 392.0], [63.2, 392.0], [63.3, 393.0], [63.4, 393.0], [63.5, 394.0], [63.6, 394.0], [63.7, 395.0], [63.8, 395.0], [63.9, 395.0], [64.0, 396.0], [64.1, 396.0], [64.2, 397.0], [64.3, 397.0], [64.4, 398.0], [64.5, 398.0], [64.6, 399.0], [64.7, 399.0], [64.8, 399.0], [64.9, 400.0], [65.0, 401.0], [65.1, 401.0], [65.2, 402.0], [65.3, 403.0], [65.4, 403.0], [65.5, 404.0], [65.6, 405.0], [65.7, 405.0], [65.8, 406.0], [65.9, 406.0], [66.0, 407.0], [66.1, 407.0], [66.2, 408.0], [66.3, 408.0], [66.4, 409.0], [66.5, 410.0], [66.6, 410.0], [66.7, 411.0], [66.8, 411.0], [66.9, 412.0], [67.0, 412.0], [67.1, 413.0], [67.2, 414.0], [67.3, 414.0], [67.4, 415.0], [67.5, 415.0], [67.6, 415.0], [67.7, 415.0], [67.8, 416.0], [67.9, 417.0], [68.0, 417.0], [68.1, 418.0], [68.2, 418.0], [68.3, 418.0], [68.4, 419.0], [68.5, 420.0], [68.6, 420.0], [68.7, 420.0], [68.8, 421.0], [68.9, 422.0], [69.0, 422.0], [69.1, 423.0], [69.2, 423.0], [69.3, 424.0], [69.4, 424.0], [69.5, 425.0], [69.6, 425.0], [69.7, 426.0], [69.8, 426.0], [69.9, 427.0], [70.0, 428.0], [70.1, 428.0], [70.2, 429.0], [70.3, 429.0], [70.4, 430.0], [70.5, 431.0], [70.6, 431.0], [70.7, 432.0], [70.8, 433.0], [70.9, 433.0], [71.0, 434.0], [71.1, 435.0], [71.2, 435.0], [71.3, 436.0], [71.4, 437.0], [71.5, 437.0], [71.6, 438.0], [71.7, 438.0], [71.8, 439.0], [71.9, 439.0], [72.0, 440.0], [72.1, 441.0], [72.2, 441.0], [72.3, 442.0], [72.4, 442.0], [72.5, 443.0], [72.6, 444.0], [72.7, 444.0], [72.8, 445.0], [72.9, 445.0], [73.0, 447.0], [73.1, 448.0], [73.2, 449.0], [73.3, 449.0], [73.4, 450.0], [73.5, 451.0], [73.6, 451.0], [73.7, 452.0], [73.8, 452.0], [73.9, 453.0], [74.0, 454.0], [74.1, 455.0], [74.2, 456.0], [74.3, 457.0], [74.4, 458.0], [74.5, 459.0], [74.6, 460.0], [74.7, 461.0], [74.8, 462.0], [74.9, 462.0], [75.0, 463.0], [75.1, 464.0], [75.2, 464.0], [75.3, 465.0], [75.4, 466.0], [75.5, 466.0], [75.6, 467.0], [75.7, 468.0], [75.8, 468.0], [75.9, 469.0], [76.0, 470.0], [76.1, 471.0], [76.2, 472.0], [76.3, 473.0], [76.4, 474.0], [76.5, 475.0], [76.6, 476.0], [76.7, 477.0], [76.8, 478.0], [76.9, 479.0], [77.0, 480.0], [77.1, 480.0], [77.2, 483.0], [77.3, 484.0], [77.4, 485.0], [77.5, 486.0], [77.6, 488.0], [77.7, 488.0], [77.8, 490.0], [77.9, 491.0], [78.0, 492.0], [78.1, 492.0], [78.2, 494.0], [78.3, 495.0], [78.4, 496.0], [78.5, 498.0], [78.6, 499.0], [78.7, 501.0], [78.8, 503.0], [78.9, 504.0], [79.0, 505.0], [79.1, 507.0], [79.2, 508.0], [79.3, 510.0], [79.4, 511.0], [79.5, 512.0], [79.6, 514.0], [79.7, 516.0], [79.8, 517.0], [79.9, 518.0], [80.0, 520.0], [80.1, 520.0], [80.2, 522.0], [80.3, 523.0], [80.4, 524.0], [80.5, 526.0], [80.6, 528.0], [80.7, 530.0], [80.8, 531.0], [80.9, 532.0], [81.0, 534.0], [81.1, 536.0], [81.2, 537.0], [81.3, 539.0], [81.4, 541.0], [81.5, 543.0], [81.6, 545.0], [81.7, 546.0], [81.8, 548.0], [81.9, 549.0], [82.0, 551.0], [82.1, 553.0], [82.2, 556.0], [82.3, 557.0], [82.4, 560.0], [82.5, 562.0], [82.6, 563.0], [82.7, 565.0], [82.8, 567.0], [82.9, 570.0], [83.0, 573.0], [83.1, 579.0], [83.2, 582.0], [83.3, 585.0], [83.4, 588.0], [83.5, 592.0], [83.6, 596.0], [83.7, 598.0], [83.8, 599.0], [83.9, 602.0], [84.0, 605.0], [84.1, 608.0], [84.2, 611.0], [84.3, 616.0], [84.4, 619.0], [84.5, 622.0], [84.6, 625.0], [84.7, 628.0], [84.8, 633.0], [84.9, 637.0], [85.0, 640.0], [85.1, 643.0], [85.2, 645.0], [85.3, 648.0], [85.4, 650.0], [85.5, 656.0], [85.6, 662.0], [85.7, 665.0], [85.8, 669.0], [85.9, 672.0], [86.0, 675.0], [86.1, 679.0], [86.2, 683.0], [86.3, 687.0], [86.4, 691.0], [86.5, 695.0], [86.6, 700.0], [86.7, 704.0], [86.8, 707.0], [86.9, 711.0], [87.0, 716.0], [87.1, 721.0], [87.2, 728.0], [87.3, 733.0], [87.4, 740.0], [87.5, 744.0], [87.6, 750.0], [87.7, 754.0], [87.8, 757.0], [87.9, 764.0], [88.0, 770.0], [88.1, 775.0], [88.2, 782.0], [88.3, 783.0], [88.4, 792.0], [88.5, 797.0], [88.6, 802.0], [88.7, 806.0], [88.8, 811.0], [88.9, 817.0], [89.0, 821.0], [89.1, 824.0], [89.2, 829.0], [89.3, 833.0], [89.4, 837.0], [89.5, 842.0], [89.6, 846.0], [89.7, 849.0], [89.8, 852.0], [89.9, 855.0], [90.0, 861.0], [90.1, 865.0], [90.2, 867.0], [90.3, 872.0], [90.4, 876.0], [90.5, 879.0], [90.6, 884.0], [90.7, 886.0], [90.8, 890.0], [90.9, 893.0], [91.0, 897.0], [91.1, 900.0], [91.2, 903.0], [91.3, 908.0], [91.4, 911.0], [91.5, 916.0], [91.6, 918.0], [91.7, 920.0], [91.8, 926.0], [91.9, 930.0], [92.0, 933.0], [92.1, 938.0], [92.2, 941.0], [92.3, 945.0], [92.4, 948.0], [92.5, 951.0], [92.6, 954.0], [92.7, 955.0], [92.8, 958.0], [92.9, 960.0], [93.0, 962.0], [93.1, 965.0], [93.2, 970.0], [93.3, 972.0], [93.4, 976.0], [93.5, 981.0], [93.6, 982.0], [93.7, 985.0], [93.8, 989.0], [93.9, 992.0], [94.0, 995.0], [94.1, 996.0], [94.2, 999.0], [94.3, 1001.0], [94.4, 1005.0], [94.5, 1009.0], [94.6, 1012.0], [94.7, 1015.0], [94.8, 1017.0], [94.9, 1020.0], [95.0, 1024.0], [95.1, 1028.0], [95.2, 1029.0], [95.3, 1034.0], [95.4, 1036.0], [95.5, 1039.0], [95.6, 1045.0], [95.7, 1050.0], [95.8, 1053.0], [95.9, 1056.0], [96.0, 1060.0], [96.1, 1068.0], [96.2, 1073.0], [96.3, 1077.0], [96.4, 1079.0], [96.5, 1081.0], [96.6, 1086.0], [96.7, 1090.0], [96.8, 1094.0], [96.9, 1099.0], [97.0, 1103.0], [97.1, 1109.0], [97.2, 1114.0], [97.3, 1122.0], [97.4, 1129.0], [97.5, 1135.0], [97.6, 1144.0], [97.7, 1151.0], [97.8, 1155.0], [97.9, 1159.0], [98.0, 1168.0], [98.1, 1172.0], [98.2, 1190.0], [98.3, 1198.0], [98.4, 1211.0], [98.5, 1227.0], [98.6, 1248.0], [98.7, 1284.0], [98.8, 1326.0], [98.9, 1437.0], [99.0, 1551.0], [99.1, 1663.0], [99.2, 1808.0], [99.3, 2042.0], [99.4, 2139.0], [99.5, 2190.0], [99.6, 2259.0], [99.7, 2375.0], [99.8, 2463.0], [99.9, 2663.0]], "isOverall": false, "label": "/purchase.php-19", "isController": false}, {"data": [[0.0, 74.0], [0.1, 222.0], [0.2, 224.0], [0.3, 225.0], [0.4, 226.0], [0.5, 227.0], [0.6, 227.0], [0.7, 228.0], [0.8, 228.0], [0.9, 229.0], [1.0, 229.0], [1.1, 229.0], [1.2, 230.0], [1.3, 230.0], [1.4, 231.0], [1.5, 231.0], [1.6, 231.0], [1.7, 232.0], [1.8, 232.0], [1.9, 233.0], [2.0, 233.0], [2.1, 233.0], [2.2, 234.0], [2.3, 234.0], [2.4, 234.0], [2.5, 234.0], [2.6, 235.0], [2.7, 235.0], [2.8, 235.0], [2.9, 235.0], [3.0, 235.0], [3.1, 236.0], [3.2, 236.0], [3.3, 236.0], [3.4, 236.0], [3.5, 237.0], [3.6, 237.0], [3.7, 237.0], [3.8, 237.0], [3.9, 237.0], [4.0, 237.0], [4.1, 237.0], [4.2, 238.0], [4.3, 238.0], [4.4, 238.0], [4.5, 238.0], [4.6, 238.0], [4.7, 239.0], [4.8, 239.0], [4.9, 239.0], [5.0, 239.0], [5.1, 239.0], [5.2, 239.0], [5.3, 239.0], [5.4, 240.0], [5.5, 240.0], [5.6, 240.0], [5.7, 240.0], [5.8, 240.0], [5.9, 240.0], [6.0, 240.0], [6.1, 241.0], [6.2, 241.0], [6.3, 241.0], [6.4, 241.0], [6.5, 241.0], [6.6, 241.0], [6.7, 242.0], [6.8, 242.0], [6.9, 242.0], [7.0, 242.0], [7.1, 242.0], [7.2, 242.0], [7.3, 243.0], [7.4, 243.0], [7.5, 243.0], [7.6, 243.0], [7.7, 243.0], [7.8, 243.0], [7.9, 243.0], [8.0, 244.0], [8.1, 244.0], [8.2, 244.0], [8.3, 244.0], [8.4, 244.0], [8.5, 244.0], [8.6, 244.0], [8.7, 245.0], [8.8, 245.0], [8.9, 245.0], [9.0, 245.0], [9.1, 245.0], [9.2, 245.0], [9.3, 245.0], [9.4, 246.0], [9.5, 246.0], [9.6, 246.0], [9.7, 246.0], [9.8, 246.0], [9.9, 246.0], [10.0, 246.0], [10.1, 247.0], [10.2, 247.0], [10.3, 247.0], [10.4, 247.0], [10.5, 247.0], [10.6, 247.0], [10.7, 247.0], [10.8, 247.0], [10.9, 248.0], [11.0, 248.0], [11.1, 248.0], [11.2, 248.0], [11.3, 248.0], [11.4, 248.0], [11.5, 249.0], [11.6, 249.0], [11.7, 249.0], [11.8, 249.0], [11.9, 249.0], [12.0, 249.0], [12.1, 249.0], [12.2, 250.0], [12.3, 250.0], [12.4, 250.0], [12.5, 250.0], [12.6, 250.0], [12.7, 250.0], [12.8, 250.0], [12.9, 251.0], [13.0, 251.0], [13.1, 251.0], [13.2, 251.0], [13.3, 251.0], [13.4, 251.0], [13.5, 251.0], [13.6, 251.0], [13.7, 252.0], [13.8, 252.0], [13.9, 252.0], [14.0, 252.0], [14.1, 252.0], [14.2, 252.0], [14.3, 252.0], [14.4, 253.0], [14.5, 253.0], [14.6, 253.0], [14.7, 253.0], [14.8, 253.0], [14.9, 253.0], [15.0, 253.0], [15.1, 254.0], [15.2, 254.0], [15.3, 254.0], [15.4, 254.0], [15.5, 254.0], [15.6, 254.0], [15.7, 254.0], [15.8, 254.0], [15.9, 255.0], [16.0, 255.0], [16.1, 255.0], [16.2, 255.0], [16.3, 255.0], [16.4, 255.0], [16.5, 256.0], [16.6, 256.0], [16.7, 256.0], [16.8, 256.0], [16.9, 256.0], [17.0, 256.0], [17.1, 256.0], [17.2, 256.0], [17.3, 256.0], [17.4, 257.0], [17.5, 257.0], [17.6, 257.0], [17.7, 257.0], [17.8, 257.0], [17.9, 257.0], [18.0, 258.0], [18.1, 258.0], [18.2, 258.0], [18.3, 258.0], [18.4, 258.0], [18.5, 258.0], [18.6, 258.0], [18.7, 259.0], [18.8, 259.0], [18.9, 259.0], [19.0, 259.0], [19.1, 259.0], [19.2, 259.0], [19.3, 260.0], [19.4, 260.0], [19.5, 260.0], [19.6, 260.0], [19.7, 260.0], [19.8, 260.0], [19.9, 261.0], [20.0, 261.0], [20.1, 261.0], [20.2, 261.0], [20.3, 261.0], [20.4, 261.0], [20.5, 261.0], [20.6, 261.0], [20.7, 262.0], [20.8, 262.0], [20.9, 262.0], [21.0, 262.0], [21.1, 262.0], [21.2, 263.0], [21.3, 263.0], [21.4, 263.0], [21.5, 263.0], [21.6, 263.0], [21.7, 263.0], [21.8, 264.0], [21.9, 264.0], [22.0, 264.0], [22.1, 264.0], [22.2, 264.0], [22.3, 264.0], [22.4, 264.0], [22.5, 265.0], [22.6, 265.0], [22.7, 265.0], [22.8, 265.0], [22.9, 265.0], [23.0, 265.0], [23.1, 266.0], [23.2, 266.0], [23.3, 266.0], [23.4, 266.0], [23.5, 266.0], [23.6, 267.0], [23.7, 267.0], [23.8, 267.0], [23.9, 267.0], [24.0, 267.0], [24.1, 267.0], [24.2, 267.0], [24.3, 268.0], [24.4, 268.0], [24.5, 268.0], [24.6, 268.0], [24.7, 268.0], [24.8, 269.0], [24.9, 269.0], [25.0, 269.0], [25.1, 269.0], [25.2, 269.0], [25.3, 270.0], [25.4, 270.0], [25.5, 270.0], [25.6, 270.0], [25.7, 270.0], [25.8, 271.0], [25.9, 271.0], [26.0, 271.0], [26.1, 271.0], [26.2, 271.0], [26.3, 271.0], [26.4, 272.0], [26.5, 272.0], [26.6, 272.0], [26.7, 272.0], [26.8, 272.0], [26.9, 272.0], [27.0, 273.0], [27.1, 273.0], [27.2, 273.0], [27.3, 273.0], [27.4, 274.0], [27.5, 274.0], [27.6, 274.0], [27.7, 274.0], [27.8, 274.0], [27.9, 274.0], [28.0, 274.0], [28.1, 275.0], [28.2, 275.0], [28.3, 275.0], [28.4, 275.0], [28.5, 275.0], [28.6, 276.0], [28.7, 276.0], [28.8, 276.0], [28.9, 276.0], [29.0, 276.0], [29.1, 276.0], [29.2, 277.0], [29.3, 277.0], [29.4, 277.0], [29.5, 277.0], [29.6, 277.0], [29.7, 278.0], [29.8, 278.0], [29.9, 278.0], [30.0, 278.0], [30.1, 278.0], [30.2, 278.0], [30.3, 279.0], [30.4, 279.0], [30.5, 279.0], [30.6, 279.0], [30.7, 279.0], [30.8, 280.0], [30.9, 280.0], [31.0, 280.0], [31.1, 281.0], [31.2, 281.0], [31.3, 281.0], [31.4, 281.0], [31.5, 282.0], [31.6, 282.0], [31.7, 282.0], [31.8, 283.0], [31.9, 283.0], [32.0, 283.0], [32.1, 283.0], [32.2, 284.0], [32.3, 284.0], [32.4, 284.0], [32.5, 284.0], [32.6, 284.0], [32.7, 284.0], [32.8, 285.0], [32.9, 285.0], [33.0, 285.0], [33.1, 286.0], [33.2, 286.0], [33.3, 286.0], [33.4, 286.0], [33.5, 286.0], [33.6, 287.0], [33.7, 287.0], [33.8, 287.0], [33.9, 287.0], [34.0, 287.0], [34.1, 288.0], [34.2, 288.0], [34.3, 288.0], [34.4, 288.0], [34.5, 289.0], [34.6, 289.0], [34.7, 289.0], [34.8, 289.0], [34.9, 290.0], [35.0, 290.0], [35.1, 290.0], [35.2, 290.0], [35.3, 290.0], [35.4, 291.0], [35.5, 291.0], [35.6, 291.0], [35.7, 291.0], [35.8, 291.0], [35.9, 292.0], [36.0, 292.0], [36.1, 292.0], [36.2, 292.0], [36.3, 293.0], [36.4, 293.0], [36.5, 293.0], [36.6, 293.0], [36.7, 294.0], [36.8, 294.0], [36.9, 294.0], [37.0, 294.0], [37.1, 295.0], [37.2, 295.0], [37.3, 295.0], [37.4, 295.0], [37.5, 296.0], [37.6, 296.0], [37.7, 296.0], [37.8, 297.0], [37.9, 297.0], [38.0, 297.0], [38.1, 297.0], [38.2, 298.0], [38.3, 298.0], [38.4, 298.0], [38.5, 299.0], [38.6, 299.0], [38.7, 299.0], [38.8, 299.0], [38.9, 300.0], [39.0, 300.0], [39.1, 300.0], [39.2, 301.0], [39.3, 301.0], [39.4, 301.0], [39.5, 301.0], [39.6, 301.0], [39.7, 302.0], [39.8, 302.0], [39.9, 303.0], [40.0, 303.0], [40.1, 303.0], [40.2, 304.0], [40.3, 304.0], [40.4, 304.0], [40.5, 304.0], [40.6, 305.0], [40.7, 305.0], [40.8, 305.0], [40.9, 306.0], [41.0, 306.0], [41.1, 306.0], [41.2, 306.0], [41.3, 307.0], [41.4, 307.0], [41.5, 307.0], [41.6, 308.0], [41.7, 308.0], [41.8, 308.0], [41.9, 308.0], [42.0, 309.0], [42.1, 309.0], [42.2, 309.0], [42.3, 310.0], [42.4, 310.0], [42.5, 310.0], [42.6, 311.0], [42.7, 311.0], [42.8, 311.0], [42.9, 312.0], [43.0, 312.0], [43.1, 312.0], [43.2, 313.0], [43.3, 313.0], [43.4, 313.0], [43.5, 314.0], [43.6, 314.0], [43.7, 314.0], [43.8, 315.0], [43.9, 315.0], [44.0, 315.0], [44.1, 316.0], [44.2, 316.0], [44.3, 316.0], [44.4, 317.0], [44.5, 317.0], [44.6, 317.0], [44.7, 318.0], [44.8, 318.0], [44.9, 318.0], [45.0, 319.0], [45.1, 319.0], [45.2, 319.0], [45.3, 320.0], [45.4, 320.0], [45.5, 321.0], [45.6, 321.0], [45.7, 322.0], [45.8, 322.0], [45.9, 322.0], [46.0, 323.0], [46.1, 323.0], [46.2, 323.0], [46.3, 324.0], [46.4, 324.0], [46.5, 324.0], [46.6, 325.0], [46.7, 325.0], [46.8, 326.0], [46.9, 326.0], [47.0, 326.0], [47.1, 326.0], [47.2, 327.0], [47.3, 328.0], [47.4, 328.0], [47.5, 328.0], [47.6, 329.0], [47.7, 329.0], [47.8, 330.0], [47.9, 330.0], [48.0, 330.0], [48.1, 331.0], [48.2, 331.0], [48.3, 331.0], [48.4, 332.0], [48.5, 332.0], [48.6, 332.0], [48.7, 333.0], [48.8, 333.0], [48.9, 334.0], [49.0, 334.0], [49.1, 334.0], [49.2, 335.0], [49.3, 335.0], [49.4, 335.0], [49.5, 335.0], [49.6, 336.0], [49.7, 336.0], [49.8, 337.0], [49.9, 337.0], [50.0, 338.0], [50.1, 338.0], [50.2, 339.0], [50.3, 339.0], [50.4, 340.0], [50.5, 340.0], [50.6, 341.0], [50.7, 341.0], [50.8, 342.0], [50.9, 342.0], [51.0, 342.0], [51.1, 342.0], [51.2, 343.0], [51.3, 343.0], [51.4, 344.0], [51.5, 344.0], [51.6, 345.0], [51.7, 345.0], [51.8, 345.0], [51.9, 345.0], [52.0, 346.0], [52.1, 346.0], [52.2, 347.0], [52.3, 347.0], [52.4, 348.0], [52.5, 348.0], [52.6, 348.0], [52.7, 349.0], [52.8, 350.0], [52.9, 350.0], [53.0, 351.0], [53.1, 351.0], [53.2, 352.0], [53.3, 353.0], [53.4, 353.0], [53.5, 353.0], [53.6, 354.0], [53.7, 354.0], [53.8, 355.0], [53.9, 355.0], [54.0, 355.0], [54.1, 355.0], [54.2, 356.0], [54.3, 356.0], [54.4, 357.0], [54.5, 357.0], [54.6, 357.0], [54.7, 357.0], [54.8, 358.0], [54.9, 358.0], [55.0, 358.0], [55.1, 359.0], [55.2, 359.0], [55.3, 360.0], [55.4, 361.0], [55.5, 361.0], [55.6, 361.0], [55.7, 361.0], [55.8, 362.0], [55.9, 362.0], [56.0, 363.0], [56.1, 363.0], [56.2, 364.0], [56.3, 365.0], [56.4, 365.0], [56.5, 365.0], [56.6, 366.0], [56.7, 366.0], [56.8, 367.0], [56.9, 367.0], [57.0, 367.0], [57.1, 368.0], [57.2, 368.0], [57.3, 369.0], [57.4, 369.0], [57.5, 370.0], [57.6, 370.0], [57.7, 371.0], [57.8, 371.0], [57.9, 372.0], [58.0, 372.0], [58.1, 373.0], [58.2, 373.0], [58.3, 373.0], [58.4, 374.0], [58.5, 374.0], [58.6, 375.0], [58.7, 376.0], [58.8, 376.0], [58.9, 376.0], [59.0, 377.0], [59.1, 377.0], [59.2, 378.0], [59.3, 378.0], [59.4, 379.0], [59.5, 379.0], [59.6, 380.0], [59.7, 380.0], [59.8, 381.0], [59.9, 381.0], [60.0, 382.0], [60.1, 382.0], [60.2, 383.0], [60.3, 383.0], [60.4, 383.0], [60.5, 384.0], [60.6, 384.0], [60.7, 385.0], [60.8, 385.0], [60.9, 386.0], [61.0, 386.0], [61.1, 386.0], [61.2, 387.0], [61.3, 387.0], [61.4, 388.0], [61.5, 388.0], [61.6, 388.0], [61.7, 389.0], [61.8, 390.0], [61.9, 390.0], [62.0, 391.0], [62.1, 392.0], [62.2, 392.0], [62.3, 392.0], [62.4, 393.0], [62.5, 393.0], [62.6, 393.0], [62.7, 394.0], [62.8, 395.0], [62.9, 395.0], [63.0, 396.0], [63.1, 396.0], [63.2, 397.0], [63.3, 397.0], [63.4, 398.0], [63.5, 398.0], [63.6, 399.0], [63.7, 400.0], [63.8, 400.0], [63.9, 401.0], [64.0, 401.0], [64.1, 401.0], [64.2, 402.0], [64.3, 403.0], [64.4, 403.0], [64.5, 404.0], [64.6, 404.0], [64.7, 404.0], [64.8, 405.0], [64.9, 406.0], [65.0, 406.0], [65.1, 407.0], [65.2, 407.0], [65.3, 408.0], [65.4, 408.0], [65.5, 409.0], [65.6, 409.0], [65.7, 411.0], [65.8, 411.0], [65.9, 412.0], [66.0, 412.0], [66.1, 413.0], [66.2, 413.0], [66.3, 414.0], [66.4, 414.0], [66.5, 415.0], [66.6, 415.0], [66.7, 416.0], [66.8, 416.0], [66.9, 417.0], [67.0, 418.0], [67.1, 418.0], [67.2, 419.0], [67.3, 420.0], [67.4, 420.0], [67.5, 421.0], [67.6, 421.0], [67.7, 422.0], [67.8, 423.0], [67.9, 423.0], [68.0, 424.0], [68.1, 425.0], [68.2, 426.0], [68.3, 426.0], [68.4, 426.0], [68.5, 427.0], [68.6, 428.0], [68.7, 428.0], [68.8, 429.0], [68.9, 429.0], [69.0, 430.0], [69.1, 430.0], [69.2, 431.0], [69.3, 432.0], [69.4, 432.0], [69.5, 433.0], [69.6, 433.0], [69.7, 434.0], [69.8, 434.0], [69.9, 435.0], [70.0, 436.0], [70.1, 437.0], [70.2, 437.0], [70.3, 438.0], [70.4, 439.0], [70.5, 440.0], [70.6, 440.0], [70.7, 441.0], [70.8, 442.0], [70.9, 443.0], [71.0, 444.0], [71.1, 444.0], [71.2, 445.0], [71.3, 445.0], [71.4, 447.0], [71.5, 447.0], [71.6, 448.0], [71.7, 449.0], [71.8, 450.0], [71.9, 451.0], [72.0, 452.0], [72.1, 453.0], [72.2, 453.0], [72.3, 454.0], [72.4, 455.0], [72.5, 455.0], [72.6, 456.0], [72.7, 457.0], [72.8, 458.0], [72.9, 459.0], [73.0, 459.0], [73.1, 460.0], [73.2, 461.0], [73.3, 462.0], [73.4, 463.0], [73.5, 465.0], [73.6, 465.0], [73.7, 466.0], [73.8, 467.0], [73.9, 468.0], [74.0, 468.0], [74.1, 469.0], [74.2, 470.0], [74.3, 471.0], [74.4, 472.0], [74.5, 473.0], [74.6, 473.0], [74.7, 475.0], [74.8, 476.0], [74.9, 477.0], [75.0, 479.0], [75.1, 481.0], [75.2, 482.0], [75.3, 484.0], [75.4, 485.0], [75.5, 486.0], [75.6, 487.0], [75.7, 488.0], [75.8, 489.0], [75.9, 491.0], [76.0, 492.0], [76.1, 493.0], [76.2, 494.0], [76.3, 496.0], [76.4, 497.0], [76.5, 498.0], [76.6, 500.0], [76.7, 501.0], [76.8, 503.0], [76.9, 504.0], [77.0, 505.0], [77.1, 506.0], [77.2, 507.0], [77.3, 508.0], [77.4, 510.0], [77.5, 511.0], [77.6, 513.0], [77.7, 514.0], [77.8, 515.0], [77.9, 516.0], [78.0, 518.0], [78.1, 519.0], [78.2, 521.0], [78.3, 523.0], [78.4, 525.0], [78.5, 526.0], [78.6, 527.0], [78.7, 529.0], [78.8, 529.0], [78.9, 531.0], [79.0, 532.0], [79.1, 534.0], [79.2, 536.0], [79.3, 537.0], [79.4, 538.0], [79.5, 542.0], [79.6, 545.0], [79.7, 546.0], [79.8, 549.0], [79.9, 551.0], [80.0, 553.0], [80.1, 554.0], [80.2, 556.0], [80.3, 557.0], [80.4, 558.0], [80.5, 559.0], [80.6, 561.0], [80.7, 563.0], [80.8, 564.0], [80.9, 566.0], [81.0, 568.0], [81.1, 570.0], [81.2, 571.0], [81.3, 573.0], [81.4, 575.0], [81.5, 578.0], [81.6, 580.0], [81.7, 582.0], [81.8, 585.0], [81.9, 587.0], [82.0, 589.0], [82.1, 591.0], [82.2, 593.0], [82.3, 596.0], [82.4, 598.0], [82.5, 600.0], [82.6, 603.0], [82.7, 605.0], [82.8, 606.0], [82.9, 609.0], [83.0, 612.0], [83.1, 613.0], [83.2, 615.0], [83.3, 617.0], [83.4, 619.0], [83.5, 623.0], [83.6, 627.0], [83.7, 630.0], [83.8, 632.0], [83.9, 636.0], [84.0, 638.0], [84.1, 641.0], [84.2, 645.0], [84.3, 648.0], [84.4, 649.0], [84.5, 652.0], [84.6, 656.0], [84.7, 659.0], [84.8, 661.0], [84.9, 665.0], [85.0, 667.0], [85.1, 669.0], [85.2, 672.0], [85.3, 676.0], [85.4, 680.0], [85.5, 683.0], [85.6, 685.0], [85.7, 688.0], [85.8, 691.0], [85.9, 695.0], [86.0, 698.0], [86.1, 701.0], [86.2, 704.0], [86.3, 708.0], [86.4, 709.0], [86.5, 712.0], [86.6, 715.0], [86.7, 718.0], [86.8, 721.0], [86.9, 723.0], [87.0, 726.0], [87.1, 729.0], [87.2, 732.0], [87.3, 734.0], [87.4, 738.0], [87.5, 742.0], [87.6, 745.0], [87.7, 750.0], [87.8, 754.0], [87.9, 758.0], [88.0, 762.0], [88.1, 765.0], [88.2, 770.0], [88.3, 778.0], [88.4, 780.0], [88.5, 784.0], [88.6, 789.0], [88.7, 792.0], [88.8, 794.0], [88.9, 799.0], [89.0, 803.0], [89.1, 808.0], [89.2, 816.0], [89.3, 819.0], [89.4, 822.0], [89.5, 827.0], [89.6, 833.0], [89.7, 838.0], [89.8, 841.0], [89.9, 847.0], [90.0, 850.0], [90.1, 853.0], [90.2, 857.0], [90.3, 860.0], [90.4, 866.0], [90.5, 870.0], [90.6, 873.0], [90.7, 876.0], [90.8, 879.0], [90.9, 881.0], [91.0, 884.0], [91.1, 890.0], [91.2, 893.0], [91.3, 899.0], [91.4, 901.0], [91.5, 905.0], [91.6, 909.0], [91.7, 914.0], [91.8, 918.0], [91.9, 920.0], [92.0, 924.0], [92.1, 927.0], [92.2, 931.0], [92.3, 934.0], [92.4, 939.0], [92.5, 944.0], [92.6, 948.0], [92.7, 954.0], [92.8, 961.0], [92.9, 964.0], [93.0, 967.0], [93.1, 970.0], [93.2, 974.0], [93.3, 977.0], [93.4, 981.0], [93.5, 985.0], [93.6, 988.0], [93.7, 992.0], [93.8, 995.0], [93.9, 999.0], [94.0, 1003.0], [94.1, 1011.0], [94.2, 1014.0], [94.3, 1018.0], [94.4, 1022.0], [94.5, 1024.0], [94.6, 1029.0], [94.7, 1033.0], [94.8, 1037.0], [94.9, 1039.0], [95.0, 1043.0], [95.1, 1046.0], [95.2, 1053.0], [95.3, 1057.0], [95.4, 1061.0], [95.5, 1063.0], [95.6, 1065.0], [95.7, 1069.0], [95.8, 1072.0], [95.9, 1078.0], [96.0, 1083.0], [96.1, 1086.0], [96.2, 1090.0], [96.3, 1095.0], [96.4, 1098.0], [96.5, 1102.0], [96.6, 1110.0], [96.7, 1112.0], [96.8, 1116.0], [96.9, 1118.0], [97.0, 1124.0], [97.1, 1130.0], [97.2, 1135.0], [97.3, 1140.0], [97.4, 1145.0], [97.5, 1149.0], [97.6, 1154.0], [97.7, 1161.0], [97.8, 1166.0], [97.9, 1171.0], [98.0, 1182.0], [98.1, 1192.0], [98.2, 1203.0], [98.3, 1220.0], [98.4, 1239.0], [98.5, 1263.0], [98.6, 1298.0], [98.7, 1339.0], [98.8, 1393.0], [98.9, 1469.0], [99.0, 1650.0], [99.1, 1750.0], [99.2, 1942.0], [99.3, 2066.0], [99.4, 2171.0], [99.5, 2221.0], [99.6, 2324.0], [99.7, 2399.0], [99.8, 2571.0], [99.9, 3174.0]], "isOverall": false, "label": "/confirmation.php-20", "isController": false}, {"data": [[0.0, 44.0], [0.1, 372.0], [0.2, 379.0], [0.3, 380.0], [0.4, 383.0], [0.5, 386.0], [0.6, 388.0], [0.7, 389.0], [0.8, 391.0], [0.9, 393.0], [1.0, 394.0], [1.1, 396.0], [1.2, 398.0], [1.3, 399.0], [1.4, 400.0], [1.5, 401.0], [1.6, 402.0], [1.7, 403.0], [1.8, 405.0], [1.9, 406.0], [2.0, 408.0], [2.1, 409.0], [2.2, 409.0], [2.3, 411.0], [2.4, 412.0], [2.5, 413.0], [2.6, 414.0], [2.7, 415.0], [2.8, 415.0], [2.9, 416.0], [3.0, 417.0], [3.1, 418.0], [3.2, 420.0], [3.3, 421.0], [3.4, 422.0], [3.5, 423.0], [3.6, 424.0], [3.7, 425.0], [3.8, 426.0], [3.9, 427.0], [4.0, 428.0], [4.1, 430.0], [4.2, 431.0], [4.3, 432.0], [4.4, 433.0], [4.5, 434.0], [4.6, 434.0], [4.7, 436.0], [4.8, 437.0], [4.9, 439.0], [5.0, 440.0], [5.1, 442.0], [5.2, 442.0], [5.3, 444.0], [5.4, 446.0], [5.5, 446.0], [5.6, 448.0], [5.7, 449.0], [5.8, 450.0], [5.9, 451.0], [6.0, 452.0], [6.1, 453.0], [6.2, 455.0], [6.3, 456.0], [6.4, 457.0], [6.5, 458.0], [6.6, 459.0], [6.7, 460.0], [6.8, 462.0], [6.9, 463.0], [7.0, 464.0], [7.1, 466.0], [7.2, 467.0], [7.3, 468.0], [7.4, 470.0], [7.5, 471.0], [7.6, 472.0], [7.7, 474.0], [7.8, 475.0], [7.9, 477.0], [8.0, 478.0], [8.1, 480.0], [8.2, 481.0], [8.3, 482.0], [8.4, 483.0], [8.5, 485.0], [8.6, 486.0], [8.7, 487.0], [8.8, 489.0], [8.9, 489.0], [9.0, 491.0], [9.1, 492.0], [9.2, 493.0], [9.3, 495.0], [9.4, 496.0], [9.5, 497.0], [9.6, 498.0], [9.7, 499.0], [9.8, 501.0], [9.9, 503.0], [10.0, 504.0], [10.1, 506.0], [10.2, 507.0], [10.3, 508.0], [10.4, 510.0], [10.5, 512.0], [10.6, 513.0], [10.7, 514.0], [10.8, 516.0], [10.9, 518.0], [11.0, 519.0], [11.1, 521.0], [11.2, 522.0], [11.3, 525.0], [11.4, 526.0], [11.5, 528.0], [11.6, 529.0], [11.7, 531.0], [11.8, 532.0], [11.9, 535.0], [12.0, 536.0], [12.1, 538.0], [12.2, 539.0], [12.3, 542.0], [12.4, 543.0], [12.5, 544.0], [12.6, 546.0], [12.7, 547.0], [12.8, 548.0], [12.9, 550.0], [13.0, 552.0], [13.1, 555.0], [13.2, 557.0], [13.3, 559.0], [13.4, 561.0], [13.5, 562.0], [13.6, 564.0], [13.7, 566.0], [13.8, 568.0], [13.9, 569.0], [14.0, 572.0], [14.1, 573.0], [14.2, 576.0], [14.3, 577.0], [14.4, 578.0], [14.5, 580.0], [14.6, 582.0], [14.7, 584.0], [14.8, 587.0], [14.9, 588.0], [15.0, 589.0], [15.1, 592.0], [15.2, 593.0], [15.3, 594.0], [15.4, 597.0], [15.5, 599.0], [15.6, 601.0], [15.7, 602.0], [15.8, 605.0], [15.9, 606.0], [16.0, 608.0], [16.1, 609.0], [16.2, 611.0], [16.3, 612.0], [16.4, 613.0], [16.5, 615.0], [16.6, 617.0], [16.7, 618.0], [16.8, 620.0], [16.9, 622.0], [17.0, 623.0], [17.1, 625.0], [17.2, 627.0], [17.3, 629.0], [17.4, 630.0], [17.5, 632.0], [17.6, 634.0], [17.7, 638.0], [17.8, 639.0], [17.9, 643.0], [18.0, 645.0], [18.1, 646.0], [18.2, 650.0], [18.3, 652.0], [18.4, 655.0], [18.5, 658.0], [18.6, 660.0], [18.7, 661.0], [18.8, 664.0], [18.9, 666.0], [19.0, 668.0], [19.1, 669.0], [19.2, 672.0], [19.3, 674.0], [19.4, 675.0], [19.5, 676.0], [19.6, 678.0], [19.7, 680.0], [19.8, 681.0], [19.9, 683.0], [20.0, 686.0], [20.1, 687.0], [20.2, 689.0], [20.3, 691.0], [20.4, 692.0], [20.5, 694.0], [20.6, 695.0], [20.7, 697.0], [20.8, 698.0], [20.9, 699.0], [21.0, 702.0], [21.1, 704.0], [21.2, 705.0], [21.3, 708.0], [21.4, 710.0], [21.5, 711.0], [21.6, 715.0], [21.7, 717.0], [21.8, 719.0], [21.9, 720.0], [22.0, 722.0], [22.1, 724.0], [22.2, 725.0], [22.3, 727.0], [22.4, 729.0], [22.5, 731.0], [22.6, 734.0], [22.7, 735.0], [22.8, 737.0], [22.9, 740.0], [23.0, 741.0], [23.1, 742.0], [23.2, 744.0], [23.3, 746.0], [23.4, 747.0], [23.5, 748.0], [23.6, 750.0], [23.7, 752.0], [23.8, 754.0], [23.9, 755.0], [24.0, 757.0], [24.1, 758.0], [24.2, 759.0], [24.3, 761.0], [24.4, 763.0], [24.5, 764.0], [24.6, 765.0], [24.7, 767.0], [24.8, 768.0], [24.9, 771.0], [25.0, 773.0], [25.1, 775.0], [25.2, 776.0], [25.3, 779.0], [25.4, 780.0], [25.5, 782.0], [25.6, 783.0], [25.7, 784.0], [25.8, 786.0], [25.9, 788.0], [26.0, 789.0], [26.1, 792.0], [26.2, 794.0], [26.3, 796.0], [26.4, 797.0], [26.5, 799.0], [26.6, 801.0], [26.7, 804.0], [26.8, 805.0], [26.9, 807.0], [27.0, 808.0], [27.1, 810.0], [27.2, 812.0], [27.3, 813.0], [27.4, 814.0], [27.5, 815.0], [27.6, 817.0], [27.7, 819.0], [27.8, 821.0], [27.9, 824.0], [28.0, 827.0], [28.1, 829.0], [28.2, 831.0], [28.3, 833.0], [28.4, 836.0], [28.5, 837.0], [28.6, 841.0], [28.7, 842.0], [28.8, 845.0], [28.9, 846.0], [29.0, 848.0], [29.1, 850.0], [29.2, 852.0], [29.3, 854.0], [29.4, 856.0], [29.5, 857.0], [29.6, 860.0], [29.7, 861.0], [29.8, 864.0], [29.9, 865.0], [30.0, 866.0], [30.1, 870.0], [30.2, 872.0], [30.3, 874.0], [30.4, 875.0], [30.5, 877.0], [30.6, 878.0], [30.7, 881.0], [30.8, 883.0], [30.9, 885.0], [31.0, 887.0], [31.1, 889.0], [31.2, 891.0], [31.3, 892.0], [31.4, 893.0], [31.5, 895.0], [31.6, 897.0], [31.7, 900.0], [31.8, 902.0], [31.9, 904.0], [32.0, 906.0], [32.1, 907.0], [32.2, 909.0], [32.3, 911.0], [32.4, 913.0], [32.5, 915.0], [32.6, 916.0], [32.7, 918.0], [32.8, 921.0], [32.9, 922.0], [33.0, 924.0], [33.1, 926.0], [33.2, 927.0], [33.3, 930.0], [33.4, 930.0], [33.5, 932.0], [33.6, 934.0], [33.7, 936.0], [33.8, 938.0], [33.9, 939.0], [34.0, 940.0], [34.1, 942.0], [34.2, 944.0], [34.3, 945.0], [34.4, 947.0], [34.5, 948.0], [34.6, 949.0], [34.7, 951.0], [34.8, 953.0], [34.9, 955.0], [35.0, 958.0], [35.1, 959.0], [35.2, 962.0], [35.3, 965.0], [35.4, 969.0], [35.5, 972.0], [35.6, 975.0], [35.7, 977.0], [35.8, 979.0], [35.9, 981.0], [36.0, 983.0], [36.1, 986.0], [36.2, 987.0], [36.3, 989.0], [36.4, 991.0], [36.5, 994.0], [36.6, 997.0], [36.7, 999.0], [36.8, 1001.0], [36.9, 1002.0], [37.0, 1006.0], [37.1, 1008.0], [37.2, 1011.0], [37.3, 1013.0], [37.4, 1015.0], [37.5, 1016.0], [37.6, 1019.0], [37.7, 1021.0], [37.8, 1024.0], [37.9, 1025.0], [38.0, 1028.0], [38.1, 1029.0], [38.2, 1031.0], [38.3, 1034.0], [38.4, 1037.0], [38.5, 1040.0], [38.6, 1041.0], [38.7, 1043.0], [38.8, 1046.0], [38.9, 1048.0], [39.0, 1050.0], [39.1, 1052.0], [39.2, 1055.0], [39.3, 1058.0], [39.4, 1060.0], [39.5, 1064.0], [39.6, 1067.0], [39.7, 1069.0], [39.8, 1072.0], [39.9, 1075.0], [40.0, 1077.0], [40.1, 1080.0], [40.2, 1082.0], [40.3, 1085.0], [40.4, 1089.0], [40.5, 1092.0], [40.6, 1094.0], [40.7, 1095.0], [40.8, 1098.0], [40.9, 1100.0], [41.0, 1102.0], [41.1, 1105.0], [41.2, 1108.0], [41.3, 1110.0], [41.4, 1115.0], [41.5, 1119.0], [41.6, 1123.0], [41.7, 1126.0], [41.8, 1131.0], [41.9, 1136.0], [42.0, 1139.0], [42.1, 1141.0], [42.2, 1144.0], [42.3, 1146.0], [42.4, 1149.0], [42.5, 1154.0], [42.6, 1157.0], [42.7, 1162.0], [42.8, 1165.0], [42.9, 1171.0], [43.0, 1175.0], [43.1, 1180.0], [43.2, 1183.0], [43.3, 1188.0], [43.4, 1193.0], [43.5, 1200.0], [43.6, 1208.0], [43.7, 1212.0], [43.8, 1215.0], [43.9, 1218.0], [44.0, 1223.0], [44.1, 1228.0], [44.2, 1232.0], [44.3, 1237.0], [44.4, 1242.0], [44.5, 1246.0], [44.6, 1252.0], [44.7, 1256.0], [44.8, 1259.0], [44.9, 1264.0], [45.0, 1268.0], [45.1, 1271.0], [45.2, 1279.0], [45.3, 1282.0], [45.4, 1286.0], [45.5, 1291.0], [45.6, 1297.0], [45.7, 1299.0], [45.8, 1305.0], [45.9, 1309.0], [46.0, 1315.0], [46.1, 1318.0], [46.2, 1321.0], [46.3, 1327.0], [46.4, 1333.0], [46.5, 1336.0], [46.6, 1340.0], [46.7, 1344.0], [46.8, 1350.0], [46.9, 1356.0], [47.0, 1361.0], [47.1, 1365.0], [47.2, 1374.0], [47.3, 1379.0], [47.4, 1391.0], [47.5, 1394.0], [47.6, 1400.0], [47.7, 1410.0], [47.8, 1414.0], [47.9, 1421.0], [48.0, 1426.0], [48.1, 1438.0], [48.2, 1442.0], [48.3, 1450.0], [48.4, 1461.0], [48.5, 1466.0], [48.6, 1471.0], [48.7, 1476.0], [48.8, 1486.0], [48.9, 1489.0], [49.0, 1494.0], [49.1, 1500.0], [49.2, 1508.0], [49.3, 1517.0], [49.4, 1523.0], [49.5, 1527.0], [49.6, 1532.0], [49.7, 1536.0], [49.8, 1540.0], [49.9, 1545.0], [50.0, 1550.0], [50.1, 1555.0], [50.2, 1562.0], [50.3, 1568.0], [50.4, 1572.0], [50.5, 1574.0], [50.6, 1578.0], [50.7, 1582.0], [50.8, 1588.0], [50.9, 1591.0], [51.0, 1596.0], [51.1, 1600.0], [51.2, 1606.0], [51.3, 1611.0], [51.4, 1615.0], [51.5, 1619.0], [51.6, 1623.0], [51.7, 1627.0], [51.8, 1631.0], [51.9, 1634.0], [52.0, 1639.0], [52.1, 1644.0], [52.2, 1646.0], [52.3, 1653.0], [52.4, 1658.0], [52.5, 1662.0], [52.6, 1665.0], [52.7, 1668.0], [52.8, 1675.0], [52.9, 1677.0], [53.0, 1681.0], [53.1, 1684.0], [53.2, 1688.0], [53.3, 1692.0], [53.4, 1694.0], [53.5, 1696.0], [53.6, 1699.0], [53.7, 1703.0], [53.8, 1704.0], [53.9, 1706.0], [54.0, 1713.0], [54.1, 1716.0], [54.2, 1719.0], [54.3, 1725.0], [54.4, 1728.0], [54.5, 1732.0], [54.6, 1736.0], [54.7, 1738.0], [54.8, 1742.0], [54.9, 1745.0], [55.0, 1748.0], [55.1, 1752.0], [55.2, 1756.0], [55.3, 1758.0], [55.4, 1762.0], [55.5, 1765.0], [55.6, 1768.0], [55.7, 1771.0], [55.8, 1774.0], [55.9, 1778.0], [56.0, 1780.0], [56.1, 1783.0], [56.2, 1787.0], [56.3, 1789.0], [56.4, 1792.0], [56.5, 1797.0], [56.6, 1801.0], [56.7, 1805.0], [56.8, 1807.0], [56.9, 1811.0], [57.0, 1815.0], [57.1, 1818.0], [57.2, 1821.0], [57.3, 1824.0], [57.4, 1829.0], [57.5, 1834.0], [57.6, 1839.0], [57.7, 1844.0], [57.8, 1846.0], [57.9, 1850.0], [58.0, 1855.0], [58.1, 1861.0], [58.2, 1865.0], [58.3, 1869.0], [58.4, 1873.0], [58.5, 1876.0], [58.6, 1879.0], [58.7, 1884.0], [58.8, 1888.0], [58.9, 1892.0], [59.0, 1895.0], [59.1, 1897.0], [59.2, 1898.0], [59.3, 1901.0], [59.4, 1903.0], [59.5, 1907.0], [59.6, 1911.0], [59.7, 1913.0], [59.8, 1918.0], [59.9, 1921.0], [60.0, 1924.0], [60.1, 1927.0], [60.2, 1929.0], [60.3, 1931.0], [60.4, 1933.0], [60.5, 1935.0], [60.6, 1938.0], [60.7, 1942.0], [60.8, 1947.0], [60.9, 1949.0], [61.0, 1954.0], [61.1, 1956.0], [61.2, 1958.0], [61.3, 1961.0], [61.4, 1963.0], [61.5, 1967.0], [61.6, 1968.0], [61.7, 1971.0], [61.8, 1975.0], [61.9, 1979.0], [62.0, 1982.0], [62.1, 1984.0], [62.2, 1986.0], [62.3, 1989.0], [62.4, 1992.0], [62.5, 1995.0], [62.6, 1997.0], [62.7, 2000.0], [62.8, 2004.0], [62.9, 2008.0], [63.0, 2014.0], [63.1, 2017.0], [63.2, 2020.0], [63.3, 2024.0], [63.4, 2026.0], [63.5, 2028.0], [63.6, 2030.0], [63.7, 2033.0], [63.8, 2037.0], [63.9, 2040.0], [64.0, 2044.0], [64.1, 2047.0], [64.2, 2050.0], [64.3, 2052.0], [64.4, 2055.0], [64.5, 2057.0], [64.6, 2061.0], [64.7, 2064.0], [64.8, 2068.0], [64.9, 2071.0], [65.0, 2073.0], [65.1, 2078.0], [65.2, 2081.0], [65.3, 2083.0], [65.4, 2087.0], [65.5, 2090.0], [65.6, 2092.0], [65.7, 2095.0], [65.8, 2098.0], [65.9, 2100.0], [66.0, 2102.0], [66.1, 2105.0], [66.2, 2108.0], [66.3, 2111.0], [66.4, 2114.0], [66.5, 2116.0], [66.6, 2119.0], [66.7, 2121.0], [66.8, 2125.0], [66.9, 2127.0], [67.0, 2129.0], [67.1, 2132.0], [67.2, 2133.0], [67.3, 2135.0], [67.4, 2137.0], [67.5, 2139.0], [67.6, 2141.0], [67.7, 2143.0], [67.8, 2146.0], [67.9, 2149.0], [68.0, 2152.0], [68.1, 2153.0], [68.2, 2156.0], [68.3, 2158.0], [68.4, 2160.0], [68.5, 2162.0], [68.6, 2164.0], [68.7, 2168.0], [68.8, 2171.0], [68.9, 2173.0], [69.0, 2175.0], [69.1, 2176.0], [69.2, 2179.0], [69.3, 2181.0], [69.4, 2184.0], [69.5, 2185.0], [69.6, 2187.0], [69.7, 2189.0], [69.8, 2191.0], [69.9, 2193.0], [70.0, 2195.0], [70.1, 2197.0], [70.2, 2199.0], [70.3, 2203.0], [70.4, 2206.0], [70.5, 2207.0], [70.6, 2210.0], [70.7, 2213.0], [70.8, 2217.0], [70.9, 2220.0], [71.0, 2222.0], [71.1, 2224.0], [71.2, 2226.0], [71.3, 2227.0], [71.4, 2230.0], [71.5, 2233.0], [71.6, 2236.0], [71.7, 2238.0], [71.8, 2242.0], [71.9, 2245.0], [72.0, 2248.0], [72.1, 2250.0], [72.2, 2253.0], [72.3, 2255.0], [72.4, 2258.0], [72.5, 2260.0], [72.6, 2262.0], [72.7, 2265.0], [72.8, 2267.0], [72.9, 2271.0], [73.0, 2274.0], [73.1, 2278.0], [73.2, 2280.0], [73.3, 2282.0], [73.4, 2284.0], [73.5, 2288.0], [73.6, 2290.0], [73.7, 2293.0], [73.8, 2294.0], [73.9, 2297.0], [74.0, 2299.0], [74.1, 2303.0], [74.2, 2306.0], [74.3, 2309.0], [74.4, 2311.0], [74.5, 2314.0], [74.6, 2316.0], [74.7, 2318.0], [74.8, 2320.0], [74.9, 2322.0], [75.0, 2324.0], [75.1, 2326.0], [75.2, 2327.0], [75.3, 2329.0], [75.4, 2331.0], [75.5, 2333.0], [75.6, 2336.0], [75.7, 2338.0], [75.8, 2340.0], [75.9, 2343.0], [76.0, 2345.0], [76.1, 2346.0], [76.2, 2348.0], [76.3, 2351.0], [76.4, 2353.0], [76.5, 2355.0], [76.6, 2356.0], [76.7, 2359.0], [76.8, 2361.0], [76.9, 2364.0], [77.0, 2365.0], [77.1, 2367.0], [77.2, 2372.0], [77.3, 2373.0], [77.4, 2375.0], [77.5, 2377.0], [77.6, 2378.0], [77.7, 2379.0], [77.8, 2382.0], [77.9, 2384.0], [78.0, 2387.0], [78.1, 2390.0], [78.2, 2393.0], [78.3, 2397.0], [78.4, 2400.0], [78.5, 2401.0], [78.6, 2404.0], [78.7, 2406.0], [78.8, 2408.0], [78.9, 2412.0], [79.0, 2414.0], [79.1, 2416.0], [79.2, 2418.0], [79.3, 2419.0], [79.4, 2421.0], [79.5, 2423.0], [79.6, 2424.0], [79.7, 2427.0], [79.8, 2429.0], [79.9, 2432.0], [80.0, 2435.0], [80.1, 2437.0], [80.2, 2439.0], [80.3, 2440.0], [80.4, 2441.0], [80.5, 2443.0], [80.6, 2446.0], [80.7, 2447.0], [80.8, 2448.0], [80.9, 2451.0], [81.0, 2454.0], [81.1, 2456.0], [81.2, 2458.0], [81.3, 2460.0], [81.4, 2462.0], [81.5, 2464.0], [81.6, 2466.0], [81.7, 2468.0], [81.8, 2470.0], [81.9, 2473.0], [82.0, 2475.0], [82.1, 2477.0], [82.2, 2480.0], [82.3, 2483.0], [82.4, 2485.0], [82.5, 2487.0], [82.6, 2490.0], [82.7, 2492.0], [82.8, 2495.0], [82.9, 2497.0], [83.0, 2499.0], [83.1, 2502.0], [83.2, 2504.0], [83.3, 2508.0], [83.4, 2510.0], [83.5, 2511.0], [83.6, 2513.0], [83.7, 2515.0], [83.8, 2517.0], [83.9, 2519.0], [84.0, 2521.0], [84.1, 2523.0], [84.2, 2525.0], [84.3, 2528.0], [84.4, 2529.0], [84.5, 2531.0], [84.6, 2533.0], [84.7, 2534.0], [84.8, 2537.0], [84.9, 2539.0], [85.0, 2541.0], [85.1, 2543.0], [85.2, 2544.0], [85.3, 2545.0], [85.4, 2548.0], [85.5, 2550.0], [85.6, 2551.0], [85.7, 2554.0], [85.8, 2556.0], [85.9, 2558.0], [86.0, 2562.0], [86.1, 2565.0], [86.2, 2566.0], [86.3, 2569.0], [86.4, 2571.0], [86.5, 2574.0], [86.6, 2576.0], [86.7, 2577.0], [86.8, 2579.0], [86.9, 2582.0], [87.0, 2583.0], [87.1, 2587.0], [87.2, 2589.0], [87.3, 2592.0], [87.4, 2595.0], [87.5, 2598.0], [87.6, 2600.0], [87.7, 2603.0], [87.8, 2606.0], [87.9, 2608.0], [88.0, 2611.0], [88.1, 2614.0], [88.2, 2616.0], [88.3, 2619.0], [88.4, 2622.0], [88.5, 2627.0], [88.6, 2630.0], [88.7, 2633.0], [88.8, 2635.0], [88.9, 2640.0], [89.0, 2642.0], [89.1, 2645.0], [89.2, 2649.0], [89.3, 2654.0], [89.4, 2658.0], [89.5, 2661.0], [89.6, 2664.0], [89.7, 2668.0], [89.8, 2671.0], [89.9, 2673.0], [90.0, 2678.0], [90.1, 2681.0], [90.2, 2688.0], [90.3, 2691.0], [90.4, 2699.0], [90.5, 2705.0], [90.6, 2710.0], [90.7, 2715.0], [90.8, 2722.0], [90.9, 2731.0], [91.0, 2739.0], [91.1, 2749.0], [91.2, 2757.0], [91.3, 2763.0], [91.4, 2772.0], [91.5, 2786.0], [91.6, 2797.0], [91.7, 2810.0], [91.8, 2820.0], [91.9, 2835.0], [92.0, 2851.0], [92.1, 2865.0], [92.2, 2896.0], [92.3, 2920.0], [92.4, 2929.0], [92.5, 2942.0], [92.6, 2978.0], [92.7, 3015.0], [92.8, 3037.0], [92.9, 3062.0], [93.0, 3080.0], [93.1, 3109.0], [93.2, 3137.0], [93.3, 3158.0], [93.4, 3178.0], [93.5, 3201.0], [93.6, 3225.0], [93.7, 3242.0], [93.8, 3264.0], [93.9, 3276.0], [94.0, 3286.0], [94.1, 3300.0], [94.2, 3319.0], [94.3, 3332.0], [94.4, 3350.0], [94.5, 3364.0], [94.6, 3375.0], [94.7, 3386.0], [94.8, 3392.0], [94.9, 3417.0], [95.0, 3434.0], [95.1, 3448.0], [95.2, 3455.0], [95.3, 3471.0], [95.4, 3482.0], [95.5, 3491.0], [95.6, 3499.0], [95.7, 3512.0], [95.8, 3520.0], [95.9, 3530.0], [96.0, 3545.0], [96.1, 3557.0], [96.2, 3563.0], [96.3, 3572.0], [96.4, 3583.0], [96.5, 3590.0], [96.6, 3608.0], [96.7, 3624.0], [96.8, 3644.0], [96.9, 3661.0], [97.0, 3682.0], [97.1, 3696.0], [97.2, 3718.0], [97.3, 3733.0], [97.4, 3755.0], [97.5, 3780.0], [97.6, 3800.0], [97.7, 3827.0], [97.8, 3877.0], [97.9, 3899.0], [98.0, 3947.0], [98.1, 3997.0], [98.2, 4041.0], [98.3, 4082.0], [98.4, 4158.0], [98.5, 4217.0], [98.6, 4272.0], [98.7, 4360.0], [98.8, 4431.0], [98.9, 4480.0], [99.0, 4522.0], [99.1, 4743.0], [99.2, 4855.0], [99.3, 5052.0], [99.4, 5271.0], [99.5, 5445.0], [99.6, 5625.0], [99.7, 5808.0], [99.8, 6404.0], [99.9, 7148.0]], "isOverall": false, "label": "/reserve.php-18", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 3989.0, "series": [{"data": [[0.0, 1.0], [600.0, 286.0], [700.0, 198.0], [800.0, 262.0], [900.0, 322.0], [1000.0, 274.0], [1100.0, 144.0], [1200.0, 45.0], [1300.0, 14.0], [1400.0, 8.0], [1500.0, 9.0], [1600.0, 5.0], [100.0, 4.0], [1700.0, 9.0], [1800.0, 5.0], [1900.0, 3.0], [2000.0, 8.0], [2100.0, 18.0], [2300.0, 7.0], [2200.0, 13.0], [2400.0, 9.0], [2500.0, 6.0], [2600.0, 6.0], [2700.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [200.0, 3989.0], [3600.0, 1.0], [3900.0, 2.0], [4000.0, 1.0], [4600.0, 1.0], [300.0, 2646.0], [400.0, 1415.0], [500.0, 529.0]], "isOverall": false, "label": "/purchase.php-19", "isController": false}, {"data": [[0.0, 1.0], [600.0, 365.0], [700.0, 295.0], [800.0, 243.0], [900.0, 265.0], [1000.0, 259.0], [1100.0, 178.0], [1200.0, 43.0], [1300.0, 23.0], [1400.0, 10.0], [1500.0, 5.0], [1600.0, 9.0], [100.0, 1.0], [1700.0, 8.0], [1800.0, 1.0], [1900.0, 9.0], [2000.0, 8.0], [2100.0, 15.0], [2300.0, 12.0], [2200.0, 13.0], [2400.0, 5.0], [2500.0, 5.0], [2600.0, 2.0], [2700.0, 3.0], [2800.0, 3.0], [2900.0, 1.0], [3100.0, 1.0], [200.0, 3969.0], [3400.0, 1.0], [3500.0, 2.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4600.0, 1.0], [300.0, 2539.0], [5800.0, 1.0], [400.0, 1322.0], [7100.0, 1.0], [500.0, 604.0]], "isOverall": false, "label": "/confirmation.php-20", "isController": false}, {"data": [[0.0, 1.0], [600.0, 558.0], [700.0, 578.0], [800.0, 534.0], [900.0, 518.0], [1000.0, 431.0], [1100.0, 266.0], [1200.0, 230.0], [1300.0, 194.0], [1400.0, 154.0], [1500.0, 208.0], [1600.0, 259.0], [1700.0, 308.0], [1800.0, 273.0], [1900.0, 357.0], [2000.0, 328.0], [2100.0, 447.0], [2200.0, 394.0], [2300.0, 452.0], [2400.0, 476.0], [2500.0, 471.0], [2600.0, 292.0], [2800.0, 60.0], [2700.0, 126.0], [2900.0, 42.0], [3000.0, 47.0], [3100.0, 44.0], [3300.0, 75.0], [3200.0, 62.0], [3400.0, 81.0], [3500.0, 97.0], [3600.0, 59.0], [3700.0, 48.0], [3800.0, 33.0], [3900.0, 21.0], [4000.0, 21.0], [4300.0, 13.0], [4100.0, 17.0], [4200.0, 17.0], [4400.0, 19.0], [4500.0, 7.0], [4600.0, 3.0], [4700.0, 11.0], [4800.0, 10.0], [4900.0, 2.0], [5000.0, 3.0], [5100.0, 6.0], [5200.0, 5.0], [5300.0, 3.0], [5600.0, 8.0], [5400.0, 11.0], [5500.0, 4.0], [5800.0, 4.0], [5700.0, 3.0], [6000.0, 2.0], [5900.0, 4.0], [6200.0, 1.0], [6600.0, 2.0], [6400.0, 3.0], [6500.0, 1.0], [6700.0, 1.0], [6800.0, 1.0], [6900.0, 1.0], [7100.0, 2.0], [7200.0, 1.0], [8100.0, 1.0], [8000.0, 1.0], [8600.0, 1.0], [9300.0, 1.0], [9400.0, 1.0], [9900.0, 1.0], [10200.0, 1.0], [11900.0, 1.0], [17600.0, 1.0], [100.0, 5.0], [200.0, 1.0], [300.0, 135.0], [400.0, 859.0], [500.0, 600.0]], "isOverall": false, "label": "/reserve.php-18", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 17600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 101.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1 500ms"], [2, "Requests having \nresponse time > 1 500ms"], [3, "Requests in error"]], "maxY": 16878.0, "series": [{"data": [[0.0, 16878.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 8392.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1 500ms", "isController": false}, {"data": [[2.0, 5418.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1 500ms", "isController": false}, {"data": [[3.0, 101.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.6111111111111112, "minX": 1.66066962E12, "maxY": 95.92797573919634, "series": [{"data": [[1.6606701E12, 92.37673528003832], [1.66066992E12, 56.328883774453296], [1.66066962E12, 1.6111111111111112], [1.66066998E12, 68.32550335570457], [1.6606698E12, 32.437093779015804], [1.66066986E12, 44.33686823104693], [1.66066968E12, 9.59055793991416], [1.66067016E12, 95.92797573919634], [1.66066974E12, 21.064240623839563], [1.66067004E12, 80.41632455928499]], "isOverall": false, "label": "Test_2_Tarde(Carga Media)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66067016E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 258.3333333333333, "minX": 1.0, "maxY": 3175.5531135531132, "series": [{"data": [[2.0, 258.3333333333333], [3.0, 276.61538461538464], [4.0, 344.7777777777777], [5.0, 319.22727272727275], [6.0, 327.8461538461538], [7.0, 334.344827586207], [8.0, 560.923076923077], [9.0, 390.21428571428567], [10.0, 370.6562500000001], [11.0, 303.20754716981133], [12.0, 359.0975609756097], [13.0, 407.8085106382978], [14.0, 406.0208333333333], [15.0, 366.6363636363636], [16.0, 454.77586206896547], [17.0, 336.2812499999999], [18.0, 381.4181818181818], [19.0, 435.61538461538447], [20.0, 338.3493975903616], [21.0, 388.72368421052636], [22.0, 522.2602739726029], [23.0, 389.6], [24.0, 328.4948453608247], [25.0, 427.2142857142858], [26.0, 343.10619469026545], [27.0, 301.2249999999999], [28.0, 319.58620689655197], [29.0, 329.9741379310344], [30.0, 346.6929824561403], [31.0, 336.72173913043474], [32.0, 358.1583333333332], [33.0, 351.6363636363636], [34.0, 339.9444444444445], [35.0, 355.99999999999983], [36.0, 361.25833333333327], [37.0, 368.3333333333334], [38.0, 386.65079365079384], [39.0, 381.4710743801652], [40.0, 393.16260162601634], [41.0, 398.4065040650405], [42.0, 420.5867768595043], [43.0, 424.08064516129014], [44.0, 428.792], [45.0, 437.5819672131147], [46.0, 442.081300813008], [47.0, 444.81889763779543], [48.0, 475.7096774193547], [49.0, 432.81250000000006], [50.0, 436.46456692913375], [51.0, 465.36585365853665], [52.0, 498.4206349206351], [53.0, 481.47154471544707], [54.0, 438.5333333333334], [55.0, 454.6608695652174], [56.0, 431.0564516129033], [57.0, 389.14406779661016], [58.0, 420.7698412698412], [59.0, 385.37815126050424], [60.0, 409.21367521367523], [61.0, 415.7155963302752], [62.0, 431.57364341085264], [63.0, 431.0083333333333], [64.0, 427.4102564102565], [65.0, 387.4521739130434], [66.0, 471.7719298245615], [67.0, 510.2649572649574], [68.0, 460.8103448275863], [69.0, 478.40833333333336], [70.0, 430.3534482758619], [71.0, 444.4576271186441], [72.0, 494.8425925925926], [73.0, 480.0347826086955], [74.0, 445.0000000000001], [75.0, 488.1326530612246], [76.0, 489.089430894309], [77.0, 461.59482758620686], [78.0, 506.4033613445381], [79.0, 435.08108108108104], [80.0, 439.81967213114757], [81.0, 436.35779816513764], [82.0, 473.10256410256426], [83.0, 423.1196581196581], [84.0, 585.8807339449542], [85.0, 487.7094017094017], [86.0, 514.5447154471544], [87.0, 500.754385964912], [88.0, 463.6434782608694], [89.0, 465.77868852459005], [90.0, 531.2242990654206], [91.0, 513.6406250000002], [92.0, 492.6851851851852], [93.0, 547.176470588235], [94.0, 564.387931034483], [95.0, 504.8318584070795], [96.0, 583.8828124999994], [97.0, 494.4636363636364], [98.0, 670.6752136752137], [99.0, 537.9652173913043], [100.0, 527.771217712177], [1.0, 290.0]], "isOverall": false, "label": "/purchase.php-19", "isController": false}, {"data": [[57.781411695792144, 439.4609977545636]], "isOverall": false, "label": "/purchase.php-19-Aggregated", "isController": false}, {"data": [[2.0, 359.7272727272728], [3.0, 344.6923076923077], [4.0, 343.6000000000001], [5.0, 340.7619047619047], [6.0, 304.03703703703707], [7.0, 366.07407407407413], [8.0, 414.4137931034483], [9.0, 364.3142857142857], [10.0, 398.02702702702715], [11.0, 309.5], [12.0, 478.47499999999997], [13.0, 434.5624999999999], [14.0, 402.17391304347836], [15.0, 455.32142857142856], [16.0, 478.45614035087715], [17.0, 390.77611940298516], [18.0, 581.7692307692307], [19.0, 420.36065573770486], [20.0, 358.5180722891566], [21.0, 340.4285714285714], [22.0, 409.0684931506849], [23.0, 426.0705882352942], [24.0, 364.7872340425533], [25.0, 507.5795454545453], [26.0, 323.6486486486487], [27.0, 305.8264462809917], [28.0, 316.70434782608703], [29.0, 325.43697478991595], [30.0, 361.03773584905656], [31.0, 340.4869565217391], [32.0, 349.93495934959356], [33.0, 346.62903225806457], [34.0, 363.37704918032796], [35.0, 349.33064516129036], [36.0, 369.7685950413225], [37.0, 372.5564516129032], [38.0, 378.6885245901639], [39.0, 388.07031249999994], [40.0, 393.7520661157024], [41.0, 398.41463414634154], [42.0, 418.57723577235777], [43.0, 409.7419354838708], [44.0, 436.9999999999999], [45.0, 426.1393442622951], [46.0, 452.53781512605053], [47.0, 463.1102362204724], [48.0, 461.271186440678], [49.0, 460.67968750000006], [50.0, 458.8632478632478], [51.0, 498.35833333333346], [52.0, 509.57723577235754], [53.0, 516.2265625000001], [54.0, 475.9478260869566], [55.0, 526.0387596899219], [56.0, 504.60833333333335], [57.0, 390.35], [58.0, 476.36363636363643], [59.0, 427.8305084745761], [60.0, 413.23893805309734], [61.0, 431.40833333333336], [62.0, 424.860465116279], [63.0, 414.1810344827585], [64.0, 411.3148148148147], [65.0, 414.19999999999993], [66.0, 420.0258620689657], [67.0, 491.2916666666667], [68.0, 440.9137931034482], [69.0, 442.92436974789905], [70.0, 441.75675675675683], [71.0, 415.70000000000005], [72.0, 487.1147540983605], [73.0, 455.09166666666664], [74.0, 469.40517241379297], [75.0, 501.77319587628875], [76.0, 453.2833333333335], [77.0, 473.8000000000001], [78.0, 521.0089285714284], [79.0, 458.80341880341877], [80.0, 472.7264957264955], [81.0, 470.27678571428584], [82.0, 489.1052631578948], [83.0, 462.3728813559323], [84.0, 496.233644859813], [85.0, 501.59999999999985], [86.0, 498.304347826087], [87.0, 518.8717948717948], [88.0, 417.4504504504504], [89.0, 478.5737704918034], [90.0, 491.669642857143], [91.0, 504.8067226890755], [92.0, 489.4741379310343], [93.0, 547.8500000000003], [94.0, 535.407079646018], [95.0, 572.1160714285713], [96.0, 491.69105691056916], [97.0, 542.2293577981648], [98.0, 632.2100840336136], [99.0, 622.5338983050847], [100.0, 570.8201438848919], [1.0, 279.5]], "isOverall": false, "label": "/confirmation.php-20", "isController": false}, {"data": [[57.86467194680742, 447.22870832110965]], "isOverall": false, "label": "/confirmation.php-20-Aggregated", "isController": false}, {"data": [[2.0, 486.6666666666667], [3.0, 468.35714285714283], [4.0, 657.9444444444445], [5.0, 482.5238095238095], [6.0, 558.2142857142858], [7.0, 525.7666666666667], [8.0, 535.5185185185184], [9.0, 518.5128205128206], [10.0, 547.7894736842105], [11.0, 584.5686274509806], [12.0, 595.9090909090909], [13.0, 680.8444444444443], [14.0, 548.9000000000001], [15.0, 507.7368421052632], [16.0, 525.2586206896549], [17.0, 536.4374999999999], [18.0, 640.2321428571431], [19.0, 740.2857142857142], [20.0, 525.4117647058824], [21.0, 571.7926829268291], [22.0, 602.7761194029852], [23.0, 571.7159090909089], [24.0, 526.0686274509806], [25.0, 520.3452380952383], [26.0, 534.2831858407084], [27.0, 519.282258064516], [28.0, 574.1607142857144], [29.0, 601.888888888889], [30.0, 665.4622641509434], [31.0, 657.8389830508473], [32.0, 620.8951612903228], [33.0, 653.8114754098361], [34.0, 667.8770491803278], [35.0, 699.9126984126983], [36.0, 739.1147540983608], [37.0, 766.4062500000003], [38.0, 803.9508196721313], [39.0, 795.5920000000001], [40.0, 845.8333333333329], [41.0, 838.317073170732], [42.0, 852.6611570247937], [43.0, 906.9846153846153], [44.0, 904.3032786885245], [45.0, 953.0650406504064], [46.0, 997.7258064516129], [47.0, 1011.0396825396828], [48.0, 997.4262295081968], [49.0, 1142.754385964912], [50.0, 1146.6899224806195], [51.0, 1111.0241935483868], [52.0, 1113.4634146341457], [53.0, 1130.7923076923073], [54.0, 1277.2857142857142], [55.0, 1289.7372881355936], [56.0, 1329.3250000000003], [57.0, 1623.822580645161], [58.0, 1515.752066115702], [59.0, 1619.6465517241388], [60.0, 1714.2521008403362], [61.0, 1668.1640624999993], [62.0, 1762.0280373831777], [63.0, 1830.5923076923077], [64.0, 1871.603305785124], [65.0, 1939.6460176991154], [66.0, 1910.3474576271185], [67.0, 1856.6371681415933], [68.0, 2032.8125000000002], [69.0, 2015.9837398373986], [70.0, 2211.1864406779678], [71.0, 2226.3577235772373], [72.0, 2058.5517241379316], [73.0, 2259.9626168224295], [74.0, 2232.882882882883], [75.0, 2562.0862068965507], [76.0, 2408.32142857143], [77.0, 2348.8918918918916], [78.0, 2365.666666666668], [79.0, 2468.336134453781], [80.0, 2499.956140350878], [81.0, 2423.5491803278687], [82.0, 2604.054054054053], [83.0, 2600.5378151260506], [84.0, 2662.4344262295085], [85.0, 2713.180952380953], [86.0, 2676.440000000001], [87.0, 2587.203703703704], [88.0, 2832.4399999999996], [89.0, 2781.205128205129], [90.0, 2958.8981481481487], [91.0, 2791.561983471074], [92.0, 2936.0165289256192], [93.0, 2758.4083333333347], [94.0, 3004.3571428571418], [95.0, 2995.9338842975203], [96.0, 3008.491666666667], [97.0, 3005.6293103448284], [98.0, 2987.833333333334], [99.0, 3008.999999999999], [100.0, 3175.5531135531132], [1.0, 484.6]], "isOverall": false, "label": "/reserve.php-18", "isController": false}, {"data": [[57.742610718092806, 1633.0289756759332]], "isOverall": false, "label": "/reserve.php-18-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 424.65, "minX": 1.66066962E12, "maxY": 117981.18333333333, "series": [{"data": [[1.6606701E12, 111180.33333333333], [1.66066992E12, 115437.25], [1.66066962E12, 953.3], [1.66066998E12, 111080.7], [1.6606698E12, 114696.98333333334], [1.66066986E12, 117981.18333333333], [1.66066968E12, 31049.65], [1.66067016E12, 37362.38333333333], [1.66066974E12, 71586.8], [1.66067004E12, 110253.43333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6606701E12, 49311.2], [1.66066992E12, 51328.916666666664], [1.66066962E12, 424.65], [1.66066998E12, 49253.8], [1.6606698E12, 50892.183333333334], [1.66066986E12, 52340.1], [1.66066968E12, 13769.75], [1.66067016E12, 14403.416666666666], [1.66066974E12, 31821.05], [1.66067004E12, 48920.35]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66067016E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 272.91666666666663, "minX": 1.66066962E12, "maxY": 2924.619542619539, "series": [{"data": [[1.6606701E12, 527.6702508960573], [1.66066992E12, 437.37724137931014], [1.66066962E12, 272.91666666666663], [1.66066998E12, 452.306532663317], [1.6606698E12, 345.0801952580196], [1.66066986E12, 426.09830508474545], [1.66066968E12, 368.7583547557839], [1.66067016E12, 537.7470167064441], [1.66066974E12, 389.9888765294778], [1.66067004E12, 475.71604938271645]], "isOverall": false, "label": "/purchase.php-19", "isController": false}, {"data": [[1.6606701E12, 519.8079422382666], [1.66066992E12, 468.07453416149025], [1.66066962E12, 321.0], [1.66066998E12, 443.3215317919074], [1.6606698E12, 347.6808362369336], [1.66066986E12, 429.8075880758812], [1.66066968E12, 379.6796874999997], [1.66067016E12, 580.7183770883047], [1.66066974E12, 413.63534675615176], [1.66067004E12, 479.48092152627765]], "isOverall": false, "label": "/confirmation.php-20", "isController": false}, {"data": [[1.6606701E12, 2890.5586552217464], [1.66066992E12, 1417.058091286308], [1.66066962E12, 488.25], [1.66066998E12, 2027.4953405017932], [1.6606698E12, 652.1285615010423], [1.66066986E12, 942.2167454422686], [1.66066968E12, 526.7806122448978], [1.66067016E12, 2924.619542619539], [1.66066974E12, 556.5866666666667], [1.66067004E12, 2530.1381818181776]], "isOverall": false, "label": "/reserve.php-18", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66067016E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 272.33333333333337, "minX": 1.66066962E12, "maxY": 2881.263948497851, "series": [{"data": [[1.6606701E12, 526.6229390681003], [1.66066992E12, 436.3772413793104], [1.66066962E12, 272.33333333333337], [1.66066998E12, 451.40416367552007], [1.6606698E12, 344.17782426778274], [1.66066986E12, 425.1905084745759], [1.66066968E12, 367.96915167095096], [1.66067016E12, 512.3914081145583], [1.66066974E12, 389.1768631813129], [1.66067004E12, 474.6303558460417]], "isOverall": false, "label": "/purchase.php-19", "isController": false}, {"data": [[1.6606701E12, 515.5675090252709], [1.66066992E12, 465.16977225672855], [1.66066962E12, 320.41666666666663], [1.66066998E12, 440.1401734104049], [1.6606698E12, 345.8564459930315], [1.66066986E12, 426.5392953929536], [1.66066968E12, 378.9479166666665], [1.66067016E12, 566.6754176610978], [1.66066974E12, 412.77404921700236], [1.66067004E12, 475.6817854571631]], "isOverall": false, "label": "/confirmation.php-20", "isController": false}, {"data": [[1.6606701E12, 2881.263948497851], [1.66066992E12, 1416.2793914246206], [1.66066962E12, 487.5833333333333], [1.66066998E12, 2026.7397849462368], [1.6606698E12, 651.3196664350239], [1.66066986E12, 941.3896016205271], [1.66066968E12, 526.2602040816324], [1.66067016E12, 2621.648648648648], [1.66066974E12, 556.0099999999992], [1.66067004E12, 2529.3425454545513]], "isOverall": false, "label": "/reserve.php-18", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66067016E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66066962E12, "maxY": 1892.1600831600829, "series": [{"data": [[1.6606701E12, 1.0810035842293912], [1.66066992E12, 0.0], [1.66066962E12, 0.0], [1.66066998E12, 0.0], [1.6606698E12, 0.0], [1.66066986E12, 0.0], [1.66066968E12, 0.0], [1.66067016E12, 0.0], [1.66066974E12, 0.0], [1.66067004E12, 0.0]], "isOverall": false, "label": "/purchase.php-19", "isController": false}, {"data": [[1.6606701E12, 0.0], [1.66066992E12, 0.0], [1.66066962E12, 0.0], [1.66066998E12, 0.0], [1.6606698E12, 0.0], [1.66066986E12, 0.0], [1.66066968E12, 0.0], [1.66067016E12, 0.0], [1.66066974E12, 0.0], [1.66067004E12, 0.0]], "isOverall": false, "label": "/confirmation.php-20", "isController": false}, {"data": [[1.6606701E12, 1838.4892703862654], [1.66066992E12, 779.7773167358246], [1.66066962E12, 182.16666666666666], [1.66066998E12, 1238.2093189964157], [1.6606698E12, 305.94093120222374], [1.66066986E12, 499.43214044564445], [1.66066968E12, 171.10459183673458], [1.66067016E12, 1892.1600831600829], [1.66066974E12, 186.1377777777778], [1.66067004E12, 1561.9338181818155]], "isOverall": false, "label": "/reserve.php-18", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66067016E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 212.0, "minX": 1.66066962E12, "maxY": 17665.0, "series": [{"data": [[1.6606701E12, 17665.0], [1.66066992E12, 2420.0], [1.66066962E12, 729.0], [1.66066998E12, 4483.0], [1.6606698E12, 1053.0], [1.66066986E12, 1773.0], [1.66066968E12, 3173.0], [1.66067016E12, 10267.0], [1.66066974E12, 3796.0], [1.66067004E12, 7232.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6606701E12, 2814.4000000000005], [1.66066992E12, 1591.0], [1.66066962E12, 555.3000000000002], [1.66066998E12, 2102.0], [1.6606698E12, 718.0], [1.66066986E12, 987.0], [1.66066968E12, 614.4000000000001], [1.66067016E12, 3319.0], [1.66066974E12, 645.0], [1.66067004E12, 2532.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6606701E12, 5067.180000000018], [1.66066992E12, 1881.62], [1.66066962E12, 729.0], [1.66066998E12, 2926.129999999991], [1.6606698E12, 889.7299999999996], [1.66066986E12, 1309.67], [1.66066968E12, 1783.0599999999993], [1.66067016E12, 5862.799999999998], [1.66066974E12, 2319.24], [1.66067004E12, 3848.539999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6606701E12, 3612.0], [1.66066992E12, 1707.3999999999996], [1.66066962E12, 614.2499999999998], [1.66066998E12, 2208.0], [1.6606698E12, 766.0], [1.66066986E12, 1070.3499999999995], [1.66066968E12, 988.3000000000004], [1.66067016E12, 3800.0], [1.66066974E12, 1097.4999999999986], [1.66067004E12, 2932.8999999999996]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6606701E12, 220.0], [1.66066992E12, 221.0], [1.66066962E12, 219.0], [1.66066998E12, 220.0], [1.6606698E12, 218.0], [1.66066986E12, 225.0], [1.66066968E12, 216.0], [1.66067016E12, 212.0], [1.66066974E12, 217.0], [1.66067004E12, 218.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6606701E12, 764.0], [1.66066992E12, 576.0], [1.66066962E12, 320.5], [1.66066998E12, 625.0], [1.6606698E12, 381.0], [1.66066986E12, 467.0], [1.66066968E12, 356.0], [1.66067016E12, 844.0], [1.66066974E12, 369.0], [1.66067004E12, 641.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66067016E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 278.0, "minX": 3.0, "maxY": 11912.0, "series": [{"data": [[3.0, 307.0], [4.0, 368.0], [5.0, 407.0], [6.0, 278.0], [7.0, 473.0], [8.0, 313.0], [9.0, 356.0], [10.0, 362.5], [11.0, 405.0], [12.0, 429.5], [13.0, 389.0], [14.0, 347.0], [15.0, 370.0], [16.0, 342.5], [17.0, 380.0], [18.0, 317.5], [19.0, 389.0], [20.0, 378.0], [21.0, 410.0], [22.0, 363.0], [23.0, 319.0], [24.0, 306.5], [25.0, 312.0], [26.0, 348.0], [27.0, 384.0], [28.0, 320.0], [29.0, 384.0], [30.0, 384.5], [31.0, 296.0], [32.0, 363.0], [33.0, 296.0], [34.0, 283.5], [35.0, 377.0], [36.0, 323.5], [37.0, 382.5], [39.0, 325.0], [41.0, 384.0], [40.0, 411.0], [42.0, 363.0], [43.0, 341.0], [44.0, 338.5], [45.0, 403.0], [46.0, 339.5], [47.0, 465.0], [49.0, 401.5], [51.0, 355.0], [50.0, 352.0], [53.0, 393.0], [52.0, 334.0], [54.0, 770.0], [55.0, 351.5], [56.0, 550.5], [57.0, 788.0], [58.0, 388.5], [59.0, 872.0], [61.0, 489.0], [60.0, 450.5], [62.0, 497.5], [63.0, 485.5], [66.0, 515.0], [67.0, 549.0], [65.0, 604.0], [64.0, 758.0], [71.0, 438.0], [70.0, 464.0], [68.0, 489.0], [69.0, 521.0], [72.0, 427.5], [74.0, 477.0], [75.0, 460.0], [73.0, 464.5], [77.0, 501.0], [76.0, 466.5], [78.0, 496.5], [79.0, 463.5], [80.0, 447.5], [81.0, 453.0], [83.0, 528.0], [82.0, 540.5], [85.0, 400.0], [86.0, 594.5], [84.0, 488.5], [87.0, 338.0], [91.0, 417.5], [88.0, 489.5], [89.0, 389.0], [92.0, 386.0], [129.0, 1004.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[129.0, 1432.0], [70.0, 11912.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 129.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 990.0, "series": [{"data": [[3.0, 307.0], [4.0, 366.5], [5.0, 406.0], [6.0, 278.0], [7.0, 473.0], [8.0, 312.0], [9.0, 356.0], [10.0, 362.0], [11.0, 405.0], [12.0, 429.0], [13.0, 389.0], [14.0, 346.5], [15.0, 369.0], [16.0, 341.5], [17.0, 376.0], [18.0, 317.0], [19.0, 388.0], [20.0, 378.0], [21.0, 410.0], [22.0, 363.0], [23.0, 319.0], [24.0, 303.5], [25.0, 311.0], [26.0, 348.0], [27.0, 383.0], [28.0, 319.5], [29.0, 384.0], [30.0, 384.5], [31.0, 296.0], [32.0, 362.5], [33.0, 296.0], [34.0, 283.5], [35.0, 377.0], [36.0, 323.5], [37.0, 382.0], [39.0, 323.0], [41.0, 383.0], [40.0, 410.0], [42.0, 363.0], [43.0, 340.0], [44.0, 338.0], [45.0, 403.0], [46.0, 336.5], [47.0, 464.0], [49.0, 401.5], [51.0, 353.0], [50.0, 351.0], [53.0, 393.0], [52.0, 332.5], [54.0, 755.0], [55.0, 349.5], [56.0, 548.5], [57.0, 782.0], [58.0, 386.5], [59.0, 851.0], [61.0, 488.0], [60.0, 450.0], [62.0, 496.5], [63.0, 485.0], [66.0, 514.0], [67.0, 548.0], [65.0, 599.0], [64.0, 757.0], [71.0, 436.0], [70.0, 462.0], [68.0, 485.5], [69.0, 521.0], [72.0, 426.0], [74.0, 474.0], [75.0, 459.5], [73.0, 462.5], [77.0, 500.0], [76.0, 465.0], [78.0, 496.5], [79.0, 460.0], [80.0, 444.5], [81.0, 450.0], [83.0, 526.0], [82.0, 540.0], [85.0, 399.5], [86.0, 591.5], [84.0, 488.5], [87.0, 338.0], [91.0, 417.5], [88.0, 489.0], [89.0, 388.0], [92.0, 383.5], [129.0, 990.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[129.0, 0.0], [70.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 129.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.6333333333333333, "minX": 1.66066962E12, "maxY": 74.06666666666666, "series": [{"data": [[1.6606701E12, 69.83333333333333], [1.66066992E12, 72.61666666666666], [1.66066962E12, 0.6333333333333333], [1.66066998E12, 69.73333333333333], [1.6606698E12, 72.0], [1.66066986E12, 74.06666666666666], [1.66066968E12, 19.616666666666667], [1.66067016E12, 20.35], [1.66066974E12, 45.083333333333336], [1.66067004E12, 69.21666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66067016E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.66066962E12, "maxY": 73.86666666666666, "series": [{"data": [[1.6606701E12, 69.61666666666666], [1.66066992E12, 72.41666666666667], [1.66066962E12, 0.6], [1.66066998E12, 69.53333333333333], [1.6606698E12, 71.8], [1.66066986E12, 73.86666666666666], [1.66066968E12, 19.416666666666668], [1.66067016E12, 20.316666666666666], [1.66066974E12, 44.88333333333333], [1.66067004E12, 69.01666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6606701E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.66067016E12, 1.6666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66067016E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.66066962E12, "maxY": 24.683333333333334, "series": [{"data": [[1.66067016E12, 0.26666666666666666]], "isOverall": false, "label": "/purchase.php-19-failure", "isController": false}, {"data": [[1.6606701E12, 23.25], [1.66066992E12, 24.166666666666668], [1.66066962E12, 0.2], [1.66066998E12, 23.216666666666665], [1.6606698E12, 23.9], [1.66066986E12, 24.583333333333332], [1.66066968E12, 6.483333333333333], [1.66067016E12, 6.716666666666667], [1.66066974E12, 14.983333333333333], [1.66067004E12, 22.95]], "isOverall": false, "label": "/purchase.php-19-success", "isController": false}, {"data": [[1.6606701E12, 23.283333333333335], [1.66066992E12, 24.1], [1.66066962E12, 0.2], [1.66066998E12, 23.25], [1.6606698E12, 23.983333333333334], [1.66066986E12, 24.683333333333334], [1.66066968E12, 6.533333333333333], [1.66067016E12, 6.75], [1.66066974E12, 15.0], [1.66067004E12, 22.916666666666668]], "isOverall": false, "label": "/reserve.php-18-success", "isController": false}, {"data": [[1.6606701E12, 0.016666666666666666], [1.66067016E12, 1.2666666666666666]], "isOverall": false, "label": "/reserve.php-18-failure", "isController": false}, {"data": [[1.6606701E12, 23.083333333333332], [1.66066992E12, 24.15], [1.66066962E12, 0.2], [1.66066998E12, 23.066666666666666], [1.6606698E12, 23.916666666666668], [1.66066986E12, 24.6], [1.66066968E12, 6.4], [1.66067016E12, 6.85], [1.66066974E12, 14.9], [1.66067004E12, 23.15]], "isOverall": false, "label": "/confirmation.php-20-success", "isController": false}, {"data": [[1.66067016E12, 0.13333333333333333]], "isOverall": false, "label": "/confirmation.php-20-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66067016E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.66066962E12, "maxY": 73.86666666666666, "series": [{"data": [[1.6606701E12, 69.61666666666666], [1.66066992E12, 72.41666666666667], [1.66066962E12, 0.6], [1.66066998E12, 69.53333333333333], [1.6606698E12, 71.8], [1.66066986E12, 73.86666666666666], [1.66066968E12, 19.416666666666668], [1.66067016E12, 20.316666666666666], [1.66066974E12, 44.88333333333333], [1.66067004E12, 69.01666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6606701E12, 0.016666666666666666], [1.66067016E12, 1.6666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66067016E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

